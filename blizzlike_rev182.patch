# HG changeset patch
# User asniker
# Date 1289723980 -18000
# Node ID 277186b2d0b0da6a0a92744dbd80e73755d02413
# Parent  b389a289837b8b4151d7c22c3ae54823e9e6e7f9
fix reputation

diff --git a/src/server/game/DataStores/DBCStructure.h b/src/server/game/DataStores/DBCStructure.h
--- a/src/server/game/DataStores/DBCStructure.h
+++ b/src/server/game/DataStores/DBCStructure.h
@@ -831,7 +831,19 @@
     char*       name[16];                                   // 23-38    m_name_lang
                                                             // 39 string flags
     //char*     description[16];                            // 40-55    m_description_lang
+	
                                                             // 56 string flags
+															
+int GetIndexFitTo(uint32 raceMask, uint32 classMask) const
+{
+for (int i = 0; i < 4; ++i)
+{
+if ((BaseRepRaceMask[i] == 0 || (BaseRepRaceMask[i] & raceMask)) &&
+(BaseRepClassMask[i] == 0 || (BaseRepClassMask[i] & classMask)))
+return i;
+}
+return -1;
+}															
 };
 
 #define MAX_FACTION_RELATIONS 4
diff --git a/src/server/game/Reputation/ReputationMgr.cpp b/src/server/game/Reputation/ReputationMgr.cpp
--- a/src/server/game/Reputation/ReputationMgr.cpp
+++ b/src/server/game/Reputation/ReputationMgr.cpp
@@ -59,19 +59,9 @@
 
     uint32 raceMask = m_player->getRaceMask();
     uint32 classMask = m_player->getClassMask();
-    for (int i=0; i < 4; i++)
-    {
-        if ((factionEntry->BaseRepRaceMask[i] & raceMask  ||
-            (factionEntry->BaseRepRaceMask[i] == 0  &&
-             factionEntry->BaseRepClassMask[i] != 0)) &&
-            (factionEntry->BaseRepClassMask[i] & classMask ||
-             factionEntry->BaseRepClassMask[i] == 0)
-)
-            return factionEntry->BaseRepValue[i];
-    }
-
-    // in faction.dbc exist factions with (RepListId >=0, listed in character reputation list) with all BaseRepRaceMask[i] == 0
-    return 0;
+    int idx = factionEntry->GetIndexFitTo(raceMask, classMask);
+	
+    return idx >= 0 ? factionEntry->BaseRepValue[idx] : 0;
 }
 
 int32 ReputationMgr::GetReputation(FactionEntry const* factionEntry) const
@@ -113,17 +103,9 @@
 
     uint32 raceMask = m_player->getRaceMask();
     uint32 classMask = m_player->getClassMask();
-    for (int i=0; i < 4; i++)
-    {
-        if ((factionEntry->BaseRepRaceMask[i] & raceMask  ||
-            (factionEntry->BaseRepRaceMask[i] == 0  &&
-             factionEntry->BaseRepClassMask[i] != 0)) &&
-            (factionEntry->BaseRepClassMask[i] & classMask ||
-             factionEntry->BaseRepClassMask[i] == 0)
-)
-            return factionEntry->ReputationFlags[i];
-    }
-    return 0;
+    int idx = factionEntry->GetIndexFitTo(raceMask, classMask);
+	
+	return idx >= 0 ? factionEntry->ReputationFlags[idx] : 0;
 }
 
 void ReputationMgr::SendForceReactions()
