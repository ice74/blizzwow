# HG changeset patch
# User asniker
# Date 1286779399 -21600
# Node ID 65882a883299e4bbe5aa17098e925fe092b2ca1b
# Parent  1e59a6406d09026afeb2146a13a857d21fa54ba0
fix crash

diff --git a/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/boss_infinite.cpp b/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/boss_infinite.cpp
--- a/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/boss_infinite.cpp
+++ b/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/boss_infinite.cpp
@@ -51,10 +51,16 @@
 
         InstanceScript* pInstance;
 
+        uint32 uiCorruptingBlight;
+        uint32 uiVoidStrike;
+
         void Reset()
         {
             if (pInstance)
                 pInstance->SetData(DATA_INFINITE_EVENT, NOT_STARTED);
+
+            uiCorruptingBlight = 7000;
+            uiVoidStrike = 5000;
         }
 
         void EnterCombat(Unit* /*who*/)
@@ -63,14 +69,25 @@
                 pInstance->SetData(DATA_INFINITE_EVENT, IN_PROGRESS);
         }
 
-        void AttackStart(Unit* /*who*/) {}
-        void MoveInLineOfSight(Unit* /*who*/) {}
-        void UpdateAI(const uint32 /*diff*/)
+        void UpdateAI(const uint32 diff)
         {
             //Return since we have no target
             if (!UpdateVictim())
                 return;
 
+            if (uiCorruptingBlight <= diff)
+            {
+                if (Unit* pTarget = SelectUnit(SELECT_TARGET_RANDOM,0))
+                    DoCast(pTarget, SPELL_CORRUPTING_BLIGHT);
+                uiCorruptingBlight = 17000;
+            } else uiCorruptingBlight -= diff;
+
+            if (uiVoidStrike <= diff)
+            {
+                DoCast(me->getVictim(), SPELL_VOID_STRIKE);
+                uiVoidStrike = 5000;
+            } else uiVoidStrike -= diff;
+
             DoMeleeAttackIfReady();
         }
 
diff --git a/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/culling_of_stratholme.cpp b/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/culling_of_stratholme.cpp
--- a/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/culling_of_stratholme.cpp
+++ b/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/culling_of_stratholme.cpp
@@ -282,8 +282,8 @@
             switch (pAI->uiGossipStep)
             {
                 case 0: //This one is a workaround since the very beggining of the script is wrong.
-                    if (pPlayer->GetQuestStatus(13149) != QUEST_STATUS_COMPLETE)
-                        return false;
+                    //if (pPlayer->GetQuestStatus(13149) != QUEST_STATUS_COMPLETE)
+                    //    return false;
                     pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, GOSSIP_ITEM_ARTHAS_0, GOSSIP_SENDER_MAIN, GOSSIP_ACTION_INFO_DEF);
                     pPlayer->SEND_GOSSIP_MENU(907, pCreature->GetGUID());
                     break;
@@ -336,6 +336,7 @@
         uint32 uiPlayerFaction;
         uint32 uiBossEvent;
         uint32 uiWave;
+        uint32 WavesCounter;
 
         uint64 uiUtherGUID;
         uint64 uiJainaGUID;
@@ -351,6 +352,7 @@
 
         uint32 uiExorcismTimer;
 
+
         void Reset()
         {
             uiUtherGUID = 0;
@@ -371,6 +373,8 @@
             uiMalganisGUID = 0;
             uiInfiniteGUID = 0;
 
+            WavesCounter = 0;
+
             if (pInstance) {
                 pInstance->SetData(DATA_ARTHAS_EVENT, NOT_STARTED);
                 switch(pInstance->GetData(DATA_ARTHAS_EVENT))
@@ -726,8 +730,11 @@
                         case 24:
                             if (Unit* pStalker = me->SummonCreature(NPC_INVIS_TARGET,2026.469f,1287.088f,143.596f,1.37f,TEMPSUMMON_TIMED_DESPAWN,14000))
                             {
+                                pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, 0);
                                 uiStalkerGUID = pStalker->GetGUID();
                                 me->SetUInt64Value(UNIT_FIELD_TARGET, uiStalkerGUID);
+                                if (IsHeroic())
+                                    me->SummonCreature(NPC_INFINITE, 2335.47f, 1262.04f, 132.921f, 1.42079f, TEMPSUMMON_CORPSE_TIMED_DESPAWN, 87000);
                             }
                             JumpToNextStep(1000);
                             break;
@@ -875,6 +882,8 @@
                             {
                                 SpawnWaveGroup(uiWave, uiWaveGUID);
                                 uiWave++;
+                                WavesCounter++;
+                                pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, WavesCounter);
                             }
                             JumpToNextStep(500);
                             break;
@@ -912,6 +921,8 @@
                         case 59:
                             if (pInstance->GetData(uiBossEvent) != DONE)
                             {
+                                WavesCounter++;
+                                pInstance->DoUpdateWorldState(WORLD_STATE_WAVES, WavesCounter);
                                 uint32 uiBossID = 0;
                                 if (uiBossEvent == DATA_MEATHOOK_EVENT)
                                     uiBossID = NPC_MEATHOOK;
diff --git a/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/culling_of_stratholme.h b/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/culling_of_stratholme.h
--- a/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/culling_of_stratholme.h
+++ b/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/culling_of_stratholme.h
@@ -64,4 +64,13 @@
     GO_MALGANIS_CHEST_N                                    = 190663,
     GO_MALGANIS_CHEST_H                                    = 193597
 };
+ 
+enum Culling_WorldStates
+{
+    WORLD_STATE_TIMER              = 3932,
+    WORLD_STATE_TIME_COUNTER       = 3931,
+    WORLD_STATE_WAVES              = 3504,
+    WORLD_STATE_CRATES             = 3479,
+    WORLD_STATE_CRATES_2           = 3480
+};
 #endif
diff --git a/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/instance_culling_of_stratholme.cpp b/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/instance_culling_of_stratholme.cpp
--- a/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/instance_culling_of_stratholme.cpp
+++ b/src/server/scripts/Kalimdor/CavernsOfTime/CullingOfStratholme/instance_culling_of_stratholme.cpp
@@ -54,6 +54,10 @@
         uint64 uiMalGanisGate2;
         uint64 uiExitGate;
         uint64 uiMalGanisChest;
+        uint32 EventTimer;
+        uint32 LastTimer;
+        uint32 Minute;
+        uint32 tMinutes;
 
         uint32 m_auiEncounter[MAX_ENCOUNTER];
         std::string str_data;
@@ -66,6 +70,20 @@
             return false;
         }
 
+        void Inizialize()
+        {
+            DoUpdateWorldState(WORLD_STATE_TIMER, 0);
+            DoUpdateWorldState(WORLD_STATE_TIME_COUNTER, 0);
+            DoUpdateWorldState(WORLD_STATE_WAVES, 0);
+            DoUpdateWorldState(WORLD_STATE_CRATES, 0);
+            DoUpdateWorldState(WORLD_STATE_CRATES_2, 0);
+
+            EventTimer = 1500000;
+            LastTimer = 1500000;
+            Minute = 60000;
+            tMinutes = 0;
+        }
+
         void OnCreatureCreate(Creature* pCreature, bool /*add*/)
         {
             switch(pCreature->GetEntry())
@@ -87,6 +105,8 @@
                     break;
                 case NPC_INFINITE:
                     uiInfinite = pCreature->GetGUID();
+                    DoUpdateWorldState(WORLD_STATE_TIMER, 1);
+                    DoUpdateWorldState(WORLD_STATE_TIME_COUNTER, 25);
                     break;
             }
         }
@@ -151,6 +171,11 @@
                     break;
                 case DATA_INFINITE_EVENT:
                     m_auiEncounter[4] = data;
+                    if (data == DONE)
+                    {
+                        DoUpdateWorldState(WORLD_STATE_TIMER, 0);
+                        DoUpdateWorldState(WORLD_STATE_TIME_COUNTER, 0);
+                    }
                     break;
             }
 
@@ -190,6 +215,30 @@
             return 0;
         }
 
+        void Update(uint32 diff)
+        {        
+           if (tMinutes == 25)
+           {
+               m_auiEncounter[4] = FAIL;
+               if (Creature *pInfinite = instance->GetCreature(uiInfinite))
+               {
+                   pInfinite->DisappearAndDie();
+                   pInfinite->SetLootRecipient(NULL);
+               }
+               DoUpdateWorldState(WORLD_STATE_TIMER, 0);             
+           }
+
+           if (Minute <= diff)
+           {
+              LastTimer = EventTimer;
+              tMinutes++;
+              DoUpdateWorldState(WORLD_STATE_TIME_COUNTER, 25 - tMinutes);
+              Minute = 60000;
+           }
+           else Minute -= diff;
+           return;
+        }
+
         std::string GetSaveData()
         {
             OUT_SAVE_INST_DATA;
diff --git a/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_amanitar.cpp b/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_amanitar.cpp
--- a/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_amanitar.cpp
+++ b/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_amanitar.cpp
@@ -191,8 +191,12 @@
             if (me->GetEntry() == NPC_HEALTHY_MUSHROOM && killer->GetTypeId() == TYPEID_PLAYER)
             {
                 me->InterruptNonMeleeSpells(false);
+                if (killer->HasAura(SPELL_MINI))
+                    killer->RemoveAurasDueToSpell(SPELL_MINI);
                 DoCast(killer, SPELL_HEALTHY_MUSHROOM_POTENT_FUNGUS, false);
             }
+            else if (me->GetEntry() == NPC_POISONOUS_MUSHROOM)                  
+                DoCast(me, SPELL_POISONOUS_MUSHROOM_POISON_CLOUD, false);
         }
 
         void EnterCombat(Unit * /*who*/) {}
@@ -205,7 +209,6 @@
                 if (uiAuraTimer <= diff)
                 {
                     DoCast(me, SPELL_POISONOUS_MUSHROOM_VISUAL_AREA, true);
-                    DoCast(me, SPELL_POISONOUS_MUSHROOM_POISON_CLOUD, false);
                     uiAuraTimer = 7*IN_MILLISECONDS;
                 } else uiAuraTimer -= diff;
             }
diff --git a/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_elder_nadox.cpp b/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_elder_nadox.cpp
--- a/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_elder_nadox.cpp
+++ b/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_elder_nadox.cpp
@@ -18,8 +18,6 @@
 #include "ScriptPCH.h"
 #include "ahnkahet.h"
 
-bool DeadAhnkaharGuardian; // needed for achievement: Respect Your Elders(2038)
-
 enum Achievements
 {
     ACHIEV_RESPECT_YOUR_ELDERS                    = 2038
@@ -54,6 +52,7 @@
 };
 
 #define EMOTE_HATCHES                       "An Ahn'kahar Guardian hatches!"
+#define ELDER_NADOX 29309
 
 class boss_elder_nadox : public CreatureScript
 {
@@ -76,6 +75,8 @@
 
         bool bGuardSpawned;
 
+        bool DeadAhnkaharGuardian; // needed for achievement: Respect Your Elders(2038)
+
         InstanceScript *pInstance;
 
         void Reset()
@@ -214,8 +215,14 @@
 
         void JustDied(Unit * /*killer*/)
         {
-            if (me->GetEntry() == MOB_AHNKAHAR_GUARDIAN_ENTRY)
-                DeadAhnkaharGuardian = true;
+            if (pInstance)
+			{
+				if(IsHeroic())
+				{
+					if (Creature* pNadox = me->FindNearestCreature(ELDER_NADOX,60,true))
+					    CAST_AI(boss_elder_nadox::boss_elder_nadoxAI,pNadox->AI())->DeadAhnkaharGuardian = true;
+				}
+			}                
         }
 
         void EnterCombat(Unit * /*who*/){}
diff --git a/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_jedoga_shadowseeker.cpp b/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_jedoga_shadowseeker.cpp
--- a/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_jedoga_shadowseeker.cpp
+++ b/src/server/scripts/Northrend/AzjolNerub/ahnkahet/boss_jedoga_shadowseeker.cpp
@@ -63,6 +63,8 @@
     {372.330994f, -705.278015f, -16.179716f, 5.427970f}
 };
 
+#define ACHIEVEMENT_VOLUNTEER_WORK 2056
+
 class boss_jedoga_shadowseeker : public CreatureScript
 {
 public:
@@ -92,6 +94,8 @@
 
         bool bFirstTime;
 
+		bool KilledVolunteer;
+
         void Reset()
         {
             uiOpFerTimer = urand(15*IN_MILLISECONDS,20*IN_MILLISECONDS);
@@ -117,6 +121,8 @@
             MoveUp();
 
             bFirstTime = false;
+
+			KilledVolunteer = false;
         }
 
         void EnterCombat(Unit* who)
@@ -149,7 +155,12 @@
         {
             DoScriptText(TEXT_DEATH, me);
             if (pInstance)
+			{
                 pInstance->SetData(DATA_JEDOGA_SHADOWSEEKER_EVENT, DONE);
+
+				if(IsHeroic() && !KilledVolunteer)
+					pInstance->DoCompleteAchievement(ACHIEVEMENT_VOLUNTEER_WORK);
+			}
         }
 
         void MoveInLineOfSight(Unit* who)
@@ -330,6 +341,8 @@
     }
 };
 
+#define BOSS_JEDOGA 29310
+
 class mob_jedoga_initiand : public CreatureScript
 {
 public:
@@ -374,7 +387,8 @@
 
         void JustDied(Unit* Killer)
         {
-            if (!Killer || !pInstance) return;
+            if (!Killer || !pInstance) 
+                return;
 
             if (bWalking)
             {
@@ -386,7 +400,17 @@
 
                 bWalking = false;
             }
-            if (Killer->GetTypeId() == TYPEID_PLAYER) pInstance->SetData64(DATA_PL_JEDOGA_TARGET, Killer->GetGUID());
+
+            if (Killer->GetTypeId() == TYPEID_PLAYER) 
+			{
+				pInstance->SetData64(DATA_PL_JEDOGA_TARGET, Killer->GetGUID());
+
+				if(IsHeroic() && (pInstance->GetData(DATA_JEDOGA_SHADOWSEEKER_EVENT) == IN_PROGRESS))
+				{
+					if (Creature* pJedoga = me->FindNearestCreature(BOSS_JEDOGA,60,true))
+					    CAST_AI(boss_jedoga_shadowseeker::boss_jedoga_shadowseekerAI,pJedoga->AI())->KilledVolunteer = true;
+				}					
+			}
         }
 
         void EnterCombat(Unit* who)
