# HG changeset patch
# User asniker
# Date 1286787106 -21600
# Node ID fd43e57bf6a9d1ed17f8110076625c8156e16822
# Parent  8220ff8a270fa74390fa0f99a6d519c452dc0df7
add some fix

diff --git a/sql/Greedy-core/world/Renamer.sql b/sql/Greedy-core/world/Renamer.sql
--- a/sql/Greedy-core/world/Renamer.sql
+++ b/sql/Greedy-core/world/Renamer.sql
@@ -1,1 +1,3 @@
-REPLACE INTO `creature_template` (`entry`, `difficulty_entry_1`, `difficulty_entry_2`, `difficulty_entry_3`, `KillCredit1`, `KillCredit2`, `modelid1`, `modelid2`, `modelid3`, `modelid4`, `name`, `subname`, `IconName`, `gossip_menu_id`, `minlevel`, `maxlevel`, `exp`, `faction_A`, `faction_H`, `npcflag`, `scale`, `rank`, `mindmg`, `maxdmg`, `dmgschool`, `attackpower`, `dmg_multiplier`, `baseattacktime`, `rangeattacktime`, `unit_class`, `unit_flags`, `dynamicflags`, `family`, `trainer_type`, `trainer_spell`, `trainer_class`, `trainer_race`, `minrangedmg`, `maxrangedmg`, `rangedattackpower`, `type`, `type_flags`, `lootid`, `pickpocketloot`, `skinloot`, `resistance1`, `resistance2`, `resistance3`, `resistance4`, `resistance5`, `resistance6`, `spell1`, `spell2`, `spell3`, `spell4`, `spell5`, `spell6`, `spell7`, `spell8`, `PetSpellDataId`, `VehicleId`, `mingold`, `maxgold`, `AIName`, `MovementType`, `InhabitType`, `Health_mod`, `Mana_mod`, `RacialLeader`, `questItem1`, `questItem2`, `questItem3`, `questItem4`, `questItem5`, `questItem6`, `movementId`, `RegenHealth`, `equipment_id`, `mechanic_immune_mask`, `flags_extra`, `ScriptName`) VALUES (100001, 0, 0, 0, 0, 0, 26789, 0, 0, 0, 'Herurg', 'Customize Service', '', 0, 80, 80, 0, 35, 35, 1, 0.75, 2, 1755, 1755, 0, 1504, 1000, 1500, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '', 0, 3, 100, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 'npc_customize');
+REPLACE INTO `creature_template` (`entry`, `difficulty_entry_1`, `difficulty_entry_2`, `difficulty_entry_3`, `KillCredit1`, `KillCredit2`, `modelid1`, `modelid2`, `modelid3`, `modelid4`, `name`, `subname`, `IconName`, `gossip_menu_id`, `minlevel`, `maxlevel`, `exp`, `faction_A`, `faction_H`, `npcflag`, `scale`, `rank`, `mindmg`, `maxdmg`, `dmgschool`, `attackpower`, `dmg_multiplier`, `baseattacktime`, `rangeattacktime`, `unit_class`, `unit_flags`, `dynamicflags`, `family`, `trainer_type`, `trainer_spell`, `trainer_class`, `trainer_race`, `minrangedmg`, `maxrangedmg`, `rangedattackpower`, `type`, `type_flags`, `lootid`, `pickpocketloot`, `skinloot`, `resistance1`, `resistance2`, `resistance3`, `resistance4`, `resistance5`, `resistance6`, `spell1`, `spell2`, `spell3`, `spell4`, `spell5`, `spell6`, `spell7`, `spell8`, `PetSpellDataId`, `VehicleId`, `mingold`, `maxgold`, `AIName`, `MovementType`, `InhabitType`, `Health_mod`, `Mana_mod`, `RacialLeader`, `questItem1`, `questItem2`, `questItem3`, `questItem4`, `questItem5`, `questItem6`, `movementId`, `RegenHealth`, `equipment_id`, `mechanic_immune_mask`, `flags_extra`, `ScriptName`) VALUES (100001, 0, 0, 0, 0, 0, 26789, 0, 0, 0, 'Customize Service', '', '', 0, 80, 80, 0, 35, 35, 1, 0.75, 2, 1755, 1755, 0, 1504, 1000, 1500, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '', 0, 3, 100, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 'npc_customize');
+REPLACE INTO `locales_creature` (`entry`, `name_loc8`, `subname_loc8`) VALUES
+(100001, 'Изменение персонажа', '');
diff --git a/src/server/game/Scripting/ScriptLoader.cpp b/src/server/game/Scripting/ScriptLoader.cpp
--- a/src/server/game/Scripting/ScriptLoader.cpp
+++ b/src/server/game/Scripting/ScriptLoader.cpp
@@ -1,1206 +1,1206 @@
-/* Copyright (C) 2008 - 2010 TrinityCore <http://www.trinitycore.org>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- */
-
-#include "ScriptPCH.h"
-#include "ScriptLoader.h"
-
-
-//examples
-void AddSC_example_creature();
-void AddSC_example_escort();
-void AddSC_example_gossip_codebox();
-void AddSC_example_misc();
-
-//TeleNPC2
-void AddSC_npc_teleport();
-
-// spells
-void AddSC_deathknight_spell_scripts();
-void AddSC_druid_spell_scripts();
-void AddSC_generic_spell_scripts();
-void AddSC_hunter_spell_scripts();
-void AddSC_mage_spell_scripts();
-void AddSC_paladin_spell_scripts();
-void AddSC_priest_spell_scripts();
-void AddSC_rogue_spell_scripts();
-void AddSC_shaman_spell_scripts();
-void AddSC_warlock_spell_scripts();
-void AddSC_warrior_spell_scripts();
-void AddSC_quest_spell_scripts();
-void AddSC_item_spell_scripts();
-void AddSC_example_spell_scripts();
-
-#ifdef SCRIPTS
-//world
+/* Copyright (C) 2008 - 2010 TrinityCore <http://www.trinitycore.org>
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+#include "ScriptPCH.h"
+#include "ScriptLoader.h"
+
+
+//examples
+void AddSC_example_creature();
+void AddSC_example_escort();
+void AddSC_example_gossip_codebox();
+void AddSC_example_misc();
+
+//TeleNPC2
+void AddSC_npc_teleport();
+
+// spells
+void AddSC_deathknight_spell_scripts();
+void AddSC_druid_spell_scripts();
+void AddSC_generic_spell_scripts();
+void AddSC_hunter_spell_scripts();
+void AddSC_mage_spell_scripts();
+void AddSC_paladin_spell_scripts();
+void AddSC_priest_spell_scripts();
+void AddSC_rogue_spell_scripts();
+void AddSC_shaman_spell_scripts();
+void AddSC_warlock_spell_scripts();
+void AddSC_warrior_spell_scripts();
+void AddSC_quest_spell_scripts();
+void AddSC_item_spell_scripts();
+void AddSC_example_spell_scripts();
+
+#ifdef SCRIPTS
+//world
 void AddSC_npc_mount();
-void AddSC_areatrigger_scripts();
-void AddSC_boss_emeriss();
-void AddSC_boss_taerar();
-void AddSC_boss_ysondre();
-void AddSC_generic_creature();
-void AddSC_go_scripts();
-void AddSC_guards();
-void AddSC_item_scripts();
-void AddSC_npc_professions();
-void AddSC_npc_innkeeper();
-void AddSC_npcs_special();
-void AddSC_npc_taxi();
-void AddSC_achievement_scripts();
-void AddSC_npc_customize();
-
-//guildhouse
-void AddSC_guildmaster();
-
-//eastern kingdoms
-void AddSC_alterac_valley();                 //Alterac Valley
-void AddSC_boss_balinda();
-void AddSC_boss_drekthar();
-void AddSC_boss_galvangar();
-void AddSC_boss_vanndar();
-void AddSC_blackrock_depths();               //Blackrock Depths
-void AddSC_boss_ambassador_flamelash();
-void AddSC_boss_anubshiah();
-void AddSC_boss_draganthaurissan();
-void AddSC_boss_general_angerforge();
-void AddSC_boss_gorosh_the_dervish();
-void AddSC_boss_grizzle();
-void AddSC_boss_high_interrogator_gerstahn();
-void AddSC_boss_magmus();
-void AddSC_boss_moira_bronzebeard();
-void AddSC_boss_tomb_of_seven();
-void AddSC_instance_blackrock_depths();
-void AddSC_boss_drakkisath();                //Blackrock Spire
-void AddSC_boss_halycon();
-void AddSC_boss_highlordomokk();
-void AddSC_boss_mothersmolderweb();
-void AddSC_boss_overlordwyrmthalak();
-void AddSC_boss_shadowvosh();
-void AddSC_boss_thebeast();
-void AddSC_boss_warmastervoone();
-void AddSC_boss_quatermasterzigris();
-void AddSC_boss_pyroguard_emberseer();
-void AddSC_boss_gyth();
-void AddSC_boss_rend_blackhand();
-void AddSC_boss_razorgore();                 //Blackwing lair
-void AddSC_boss_vael();
-void AddSC_boss_broodlord();
-void AddSC_boss_firemaw();
-void AddSC_boss_ebonroc();
-void AddSC_boss_flamegor();
-void AddSC_boss_chromaggus();
-void AddSC_boss_nefarian();
-void AddSC_boss_victor_nefarius();
-void AddSC_boss_mr_smite();
-void AddSC_deadmines();                      //Deadmines
-void AddSC_instance_deadmines();
-void AddSC_gnomeregan();                     //Gnomeregan
-void AddSC_instance_gnomeregan();
-void AddSC_boss_attumen();                   //Karazhan
-void AddSC_boss_curator();
-void AddSC_boss_maiden_of_virtue();
-void AddSC_boss_shade_of_aran();
-void AddSC_boss_malchezaar();
-void AddSC_boss_terestian_illhoof();
-void AddSC_boss_moroes();
-void AddSC_bosses_opera();
-void AddSC_boss_netherspite();
-void AddSC_instance_karazhan();
-void AddSC_karazhan();
-void AddSC_boss_nightbane();
-void AddSC_boss_felblood_kaelthas();         // Magister's Terrace
-void AddSC_boss_selin_fireheart();
-void AddSC_boss_vexallus();
-void AddSC_boss_priestess_delrissa();
-void AddSC_instance_magisters_terrace();
-void AddSC_magisters_terrace();
-void AddSC_boss_lucifron();                  //Molten core
-void AddSC_boss_magmadar();
-void AddSC_boss_gehennas();
-void AddSC_boss_garr();
-void AddSC_boss_baron_geddon();
-void AddSC_boss_shazzrah();
-void AddSC_boss_golemagg();
-void AddSC_boss_sulfuron();
-void AddSC_boss_majordomo();
-void AddSC_boss_ragnaros();
-void AddSC_instance_molten_core();
-void AddSC_molten_core();
-void AddSC_the_scarlet_enclave();            //Scarlet Enclave
-void AddSC_the_scarlet_enclave_c1();
-void AddSC_the_scarlet_enclave_c2();
-void AddSC_the_scarlet_enclave_c5();
-void AddSC_boss_arcanist_doan();             //Scarlet Monastery
-void AddSC_boss_azshir_the_sleepless();
-void AddSC_boss_bloodmage_thalnos();
-void AddSC_boss_headless_horseman();
-void AddSC_boss_herod();
-void AddSC_boss_high_inquisitor_fairbanks();
-void AddSC_boss_houndmaster_loksey();
-void AddSC_boss_interrogator_vishas();
-void AddSC_boss_scorn();
-void AddSC_instance_scarlet_monastery();
-void AddSC_boss_mograine_and_whitemane();
-void AddSC_boss_darkmaster_gandling();       //Scholomance
-void AddSC_boss_death_knight_darkreaver();
-void AddSC_boss_theolenkrastinov();
-void AddSC_boss_illuciabarov();
-void AddSC_boss_instructormalicia();
-void AddSC_boss_jandicebarov();
-void AddSC_boss_kormok();
-void AddSC_boss_lordalexeibarov();
-void AddSC_boss_lorekeeperpolkelt();
-void AddSC_boss_rasfrost();
-void AddSC_boss_theravenian();
-void AddSC_boss_vectus();
-void AddSC_instance_scholomance();
-void AddSC_shadowfang_keep();                //Shadowfang keep
-void AddSC_instance_shadowfang_keep();
-void AddSC_boss_magistrate_barthilas();      //Stratholme
-void AddSC_boss_maleki_the_pallid();
-void AddSC_boss_nerubenkan();
-void AddSC_boss_cannon_master_willey();
-void AddSC_boss_baroness_anastari();
-void AddSC_boss_ramstein_the_gorger();
-void AddSC_boss_timmy_the_cruel();
-void AddSC_boss_postmaster_malown();
-void AddSC_boss_baron_rivendare();
-void AddSC_boss_dathrohan_balnazzar();
-void AddSC_boss_order_of_silver_hand();
-void AddSC_instance_stratholme();
-void AddSC_stratholme();
-void AddSC_sunken_temple();                  // Sunken Temple
-void AddSC_instance_sunken_temple();
-void AddSC_instance_sunwell_plateau();       //Sunwell Plateau
-void AddSC_boss_kalecgos();
-void AddSC_boss_brutallus();
-void AddSC_boss_felmyst();
-void AddSC_boss_eredar_twins();
-void AddSC_boss_muru();
-void AddSC_boss_kiljaeden();
-void AddSC_sunwell_plateau();
-void AddSC_boss_archaedas();                 //Uldaman
-void AddSC_boss_ironaya();
-void AddSC_uldaman();
-void AddSC_instance_uldaman();
-void AddSC_boss_akilzon();                   //Zul'Aman
-void AddSC_boss_halazzi();
-void AddSC_boss_hex_lord_malacrass();
-void AddSC_boss_janalai();
-void AddSC_boss_nalorakk();
-void AddSC_boss_zuljin();
-void AddSC_instance_zulaman();
-void AddSC_zulaman();
-void AddSC_boss_jeklik();                    //Zul'Gurub
-void AddSC_boss_venoxis();
-void AddSC_boss_marli();
-void AddSC_boss_mandokir();
-void AddSC_boss_gahzranka();
-void AddSC_boss_thekal();
-void AddSC_boss_arlokk();
-void AddSC_boss_jindo();
-void AddSC_boss_hakkar();
-void AddSC_boss_grilek();
-void AddSC_boss_hazzarah();
-void AddSC_boss_renataki();
-void AddSC_boss_wushoolay();
-void AddSC_instance_zulgurub();
-
-//void AddSC_alterac_mountains();
-void AddSC_arathi_highlands();
-void AddSC_blasted_lands();
-void AddSC_boss_kruul();
-void AddSC_burning_steppes();
-void AddSC_dun_morogh();
-void AddSC_duskwood();
-void AddSC_eastern_plaguelands();
-void AddSC_elwynn_forest();
-void AddSC_eversong_woods();
-void AddSC_ghostlands();
-void AddSC_hinterlands();
-void AddSC_ironforge();
-void AddSC_isle_of_queldanas();
-void AddSC_loch_modan();
-void AddSC_redridge_mountains();
-void AddSC_searing_gorge();
-void AddSC_silvermoon_city();
-void AddSC_silverpine_forest();
-void AddSC_stormwind_city();
-void AddSC_stranglethorn_vale();
-void AddSC_swamp_of_sorrows();
-void AddSC_tirisfal_glades();
-void AddSC_undercity();
-void AddSC_western_plaguelands();
-void AddSC_westfall();
-void AddSC_wetlands();
-
-//kalimdor
-void AddSC_blackfathom_deeps();              //Blackfathom Depths
-void AddSC_boss_gelihast();
-void AddSC_boss_kelris();
-void AddSC_boss_aku_mai();
-void AddSC_instance_blackfathom_deeps();
-void AddSC_hyjal();                          //CoT Battle for Mt. Hyjal
-void AddSC_boss_archimonde();
-void AddSC_instance_mount_hyjal();
-void AddSC_hyjal_trash();
-void AddSC_boss_rage_winterchill();
-void AddSC_boss_anetheron();
-void AddSC_boss_kazrogal();
-void AddSC_boss_azgalor();
-void AddSC_boss_captain_skarloc();           //CoT Old Hillsbrad
-void AddSC_boss_epoch_hunter();
-void AddSC_boss_lieutenant_drake();
-void AddSC_instance_old_hillsbrad();
-void AddSC_old_hillsbrad();
-void AddSC_boss_aeonus();                    //CoT The Dark Portal
-void AddSC_boss_chrono_lord_deja();
-void AddSC_boss_temporus();
-void AddSC_dark_portal();
-void AddSC_instance_dark_portal();
-void AddSC_boss_epoch();                     //CoT Culling Of Stratholme
-void AddSC_boss_infinite_corruptor();
-void AddSC_boss_salramm();
-void AddSC_boss_mal_ganis();
-void AddSC_boss_meathook();
-void AddSC_culling_of_stratholme();
-void AddSC_instance_culling_of_stratholme();
-void AddSC_boss_celebras_the_cursed();       //Maraudon
-void AddSC_boss_landslide();
-void AddSC_boss_noxxion();
-void AddSC_boss_ptheradras();
-void AddSC_boss_onyxia();                    //Onyxia's Lair
-void AddSC_instance_onyxias_lair();
-void AddSC_boss_amnennar_the_coldbringer();  //Razorfen Downs
-void AddSC_razorfen_downs();
-void AddSC_instance_razorfen_downs();
-void AddSC_razorfen_kraul();                 //Razorfen Kraul
-void AddSC_boss_kurinnaxx();                 //Ruins of ahn'qiraj
-void AddSC_boss_rajaxx();
-void AddSC_boss_moam();
-void AddSC_boss_buru();
-void AddSC_boss_ayamiss();
-void AddSC_boss_ossirian();
-void AddSC_instance_ruins_of_ahnqiraj();
-void AddSC_boss_cthun();                     //Temple of ahn'qiraj
-void AddSC_boss_fankriss();
-void AddSC_boss_huhuran();
-void AddSC_bug_trio();
-void AddSC_boss_sartura();
-void AddSC_boss_skeram();
-void AddSC_boss_twinemperors();
-void AddSC_mob_anubisath_sentinel();
-void AddSC_instance_temple_of_ahnqiraj();
-void AddSC_wailing_caverns();                //Wailing caverns
-void AddSC_instance_wailing_caverns();
-void AddSC_zulfarrak();                     //Zul'Farrak generic
-void AddSC_instance_zulfarrak();            //Zul'Farrak instance script
-
-void AddSC_ashenvale();
-void AddSC_azshara();
-void AddSC_azuremyst_isle();
-void AddSC_bloodmyst_isle();
-void AddSC_boss_azuregos();
-void AddSC_darkshore();
-void AddSC_desolace();
-void AddSC_durotar();
-void AddSC_dustwallow_marsh();
-void AddSC_felwood();
-void AddSC_feralas();
-void AddSC_moonglade();
-void AddSC_mulgore();
-void AddSC_orgrimmar();
-void AddSC_silithus();
-void AddSC_stonetalon_mountains();
-void AddSC_tanaris();
-void AddSC_teldrassil();
-void AddSC_the_barrens();
-void AddSC_thousand_needles();
-void AddSC_thunder_bluff();
-void AddSC_ungoro_crater();
-void AddSC_winterspring();
-
-//northrend
-void AddSC_boss_slad_ran();
-void AddSC_boss_moorabi();
-void AddSC_boss_drakkari_colossus();
-void AddSC_boss_gal_darah();
-void AddSC_boss_eck();
-void AddSC_instance_gundrak();
-void AddSC_boss_krik_thir();             //Azjol-Nerub
-void AddSC_boss_hadronox();
-void AddSC_boss_anub_arak();
-void AddSC_instance_azjol_nerub();
-void AddSC_instance_ahnkahet();          //Azjol-Nerub Ahn'kahet
-void AddSC_boss_amanitar();
-void AddSC_boss_taldaram();
-void AddSC_boss_jedoga_shadowseeker();
-void AddSC_boss_elder_nadox();
-void AddSC_boss_volazj();
-void AddSC_boss_argent_challenge();      //Trial of the Champion
-void AddSC_boss_black_knight();
-void AddSC_boss_grand_champions();
-void AddSC_instance_trial_of_the_champion();
-void AddSC_trial_of_the_champion();
-void AddSC_boss_anubarak_trial();        //Trial of the Crusader
-void AddSC_boss_faction_champions();
-void AddSC_boss_lord_jaraxxus();
-void AddSC_boss_twins_valkyr();
-void AddSC_trial_of_the_crusader();
-void AddSC_instance_trial_of_the_crusader();
-void AddSC_boss_beasts_of_northrend();
-void AddSC_boss_anubrekhan();            //Naxxramas
-void AddSC_boss_maexxna();
-void AddSC_boss_patchwerk();
-void AddSC_boss_grobbulus();
-void AddSC_boss_razuvious();
-void AddSC_boss_kelthuzad();
-void AddSC_boss_loatheb();
-void AddSC_boss_noth();
-void AddSC_boss_gluth();
-void AddSC_boss_sapphiron();
-void AddSC_boss_four_horsemen();
-void AddSC_boss_faerlina();
-void AddSC_boss_heigan();
-void AddSC_boss_gothik();
-void AddSC_boss_thaddius();
-void AddSC_instance_naxxramas();
-void AddSC_boss_magus_telestra();        //The Nexus Nexus
-void AddSC_boss_anomalus();
-void AddSC_boss_ormorok();
-void AddSC_boss_keristrasza();
-void AddSC_instance_nexus();
-void AddSC_boss_malygos();            //The Nexus Eye Of Eternity
-void AddSC_instance_eye_of_eternity();
-void AddSC_npc_alexstraza();
-void AddSC_boss_drakos();                //The Nexus The Oculus
-void AddSC_boss_urom();
-void AddSC_instance_oculus();
-void AddSC_oculus();
-void AddSC_boss_sartharion();            //Obsidian Sanctum
-void AddSC_instance_obsidian_sanctum();
-void AddSC_boss_bjarngrim();             //Ulduar Halls of Lightning
-void AddSC_boss_loken();
-void AddSC_boss_ionar();
-void AddSC_boss_volkhan();
-void AddSC_instance_halls_of_lightning();
-void AddSC_boss_maiden_of_grief();       //Ulduar Halls of Stone
-void AddSC_boss_krystallus();
-void AddSC_boss_sjonnir();
-void AddSC_instance_halls_of_stone();
-void AddSC_halls_of_stone();
-void AddSC_boss_auriaya();               //Ulduar Ulduar
-void AddSC_boss_flame_leviathan();
-void AddSC_boss_ignis();
-void AddSC_boss_razorscale();
-void AddSC_boss_xt002();
-void AddSC_boss_kologarn();
-void AddSC_bosses_assembly_of_iron();
-void AddSC_ulduar_teleporter();
-void AddSC_instance_ulduar();
-void AddSC_boss_keleseth();              //Utgarde Keep
-void AddSC_boss_skarvald_dalronn();
-void AddSC_boss_ingvar_the_plunderer();
-void AddSC_instance_utgarde_keep();
-void AddSC_boss_svala();                 //Utgarde pinnacle
-void AddSC_boss_palehoof();
-void AddSC_boss_skadi();
-void AddSC_boss_ymiron();
-void AddSC_instance_utgarde_pinnacle();
-void AddSC_utgarde_keep();
-void AddSC_boss_archavon();              //Vault of Archavon
-void AddSC_boss_emalon();
-void AddSC_boss_koralon();
-void AddSC_boss_toravon();
-void AddSC_instance_archavon();
-void AddSC_boss_trollgore();             //Drak'Tharon Keep
-void AddSC_boss_novos();
-void AddSC_boss_dred();
-void AddSC_boss_tharon_ja();
-void AddSC_instance_drak_tharon();
-void AddSC_boss_cyanigosa();             //Violet Hold
-void AddSC_boss_erekem();
-void AddSC_boss_ichoron();
-void AddSC_boss_lavanthor();
-void AddSC_boss_moragg();
-void AddSC_boss_xevozz();
-void AddSC_boss_zuramat();
-void AddSC_instance_violet_hold();
-void AddSC_violet_hold();
-void AddSC_instance_forge_of_souls();   //Forge of Souls
-void AddSC_forge_of_souls();
-void AddSC_boss_bronjahm();
-void AddSC_boss_devourer_of_souls();
-void AddSC_instance_pit_of_saron();     //Pit of Saron
-void AddSC_pit_of_saron();
-void AddSC_boss_garfrost();
-void AddSC_boss_ick();
-void AddSC_boss_tyrannus();
-void AddSC_instance_halls_of_reflection();   // Halls of Reflection
-void AddSC_halls_of_reflection();
-void AddSC_boss_falric();
-void AddSC_boss_marwyn();
-void AddSC_boss_lich_king_hr();
-void AddSC_instance_icecrown_citadel();    // Icecrown Citadel
-void AddSC_icecrown_citadel();
-void AddSC_boss_valithria();
-void AddSC_boss_lichking();
-void AddSC_boss_sindragosa();
-void AddSC_boss_rotface();
-void AddSC_boss_rat_des_blutes();
-void AddSC_boss_professor_putricide();
-void AddSC_boss_lord_marrowgar();
-void AddSC_boss_lady_deathwhisper();
-void AddSC_boss_festergut();
-void AddSC_boss_deathbringer_saurfang();
-void AddSC_boss_blood_queen_lanathel();
-void AddSC_icecrown_citadel_teleport();
-void AddSC_boss_gunship_battle();
-void AddSC_boss_baltharus();	//RubySanctum
-void AddSC_boss_halion();
-void AddSC_boss_ragefire();
-void AddSC_boss_zarithrian();
-void AddSC_instance_ruby_sanctum();
-
-void AddSC_dalaran();
-void AddSC_borean_tundra();
-void AddSC_dragonblight();
-void AddSC_grizzly_hills();
-void AddSC_howling_fjord();
-void AddSC_icecrown();
-void AddSC_sholazar_basin();
-void AddSC_storm_peaks();
-void AddSC_zuldrak();
-void AddSC_crystalsong_forest();
-void AddSC_isle_of_conquest();
-
-//outland
-void AddSC_boss_exarch_maladaar();           //Auchindoun Auchenai Crypts
-void AddSC_boss_shirrak_the_dead_watcher();
-void AddSC_boss_nexusprince_shaffar();       //Auchindoun Mana Tombs
-void AddSC_boss_pandemonius();
-void AddSC_boss_darkweaver_syth();           //Auchindoun Sekketh Halls
-void AddSC_boss_talon_king_ikiss();
-void AddSC_instance_sethekk_halls();
-void AddSC_instance_shadow_labyrinth();      //Auchindoun Shadow Labyrinth
-void AddSC_boss_ambassador_hellmaw();
-void AddSC_boss_blackheart_the_inciter();
-void AddSC_boss_grandmaster_vorpil();
-void AddSC_boss_murmur();
-void AddSC_black_temple();                   //Black Temple
-void AddSC_boss_illidan();
-void AddSC_boss_shade_of_akama();
-void AddSC_boss_supremus();
-void AddSC_boss_gurtogg_bloodboil();
-void AddSC_boss_mother_shahraz();
-void AddSC_boss_reliquary_of_souls();
-void AddSC_boss_teron_gorefiend();
-void AddSC_boss_najentus();
-void AddSC_boss_illidari_council();
-void AddSC_instance_black_temple();
-void AddSC_boss_fathomlord_karathress();     //CR Serpent Shrine Cavern
-void AddSC_boss_hydross_the_unstable();
-void AddSC_boss_lady_vashj();
-void AddSC_boss_leotheras_the_blind();
-void AddSC_boss_morogrim_tidewalker();
-void AddSC_instance_serpentshrine_cavern();
-void AddSC_boss_the_lurker_below();
-void AddSC_boss_hydromancer_thespia();       //CR Steam Vault
-void AddSC_boss_mekgineer_steamrigger();
-void AddSC_boss_warlord_kalithresh();
-void AddSC_instance_steam_vault();
-void AddSC_boss_hungarfen();                 //CR Underbog
-void AddSC_boss_the_black_stalker();
-void AddSC_boss_gruul();                     //Gruul's Lair
-void AddSC_boss_high_king_maulgar();
-void AddSC_instance_gruuls_lair();
-void AddSC_boss_broggok();                   //HC Blood Furnace
-void AddSC_boss_kelidan_the_breaker();
-void AddSC_boss_the_maker();
-void AddSC_instance_blood_furnace();
-void AddSC_boss_magtheridon();               //HC Magtheridon's Lair
-void AddSC_instance_magtheridons_lair();
-void AddSC_boss_grand_warlock_nethekurse();  //HC Shattered Halls
-void AddSC_boss_warbringer_omrogg();
-void AddSC_boss_warchief_kargath_bladefist();
-void AddSC_instance_shattered_halls();
-void AddSC_boss_watchkeeper_gargolmar();     //HC Ramparts
-void AddSC_boss_omor_the_unscarred();
-void AddSC_boss_vazruden_the_herald();
-void AddSC_instance_ramparts();
-void AddSC_arcatraz();                       //TK Arcatraz
-void AddSC_boss_harbinger_skyriss();
-void AddSC_instance_arcatraz();
-void AddSC_boss_high_botanist_freywinn();    //TK Botanica
-void AddSC_boss_laj();
-void AddSC_boss_warp_splinter();
-void AddSC_boss_alar();                      //TK The Eye
-void AddSC_boss_kaelthas();
-void AddSC_boss_void_reaver();
-void AddSC_boss_high_astromancer_solarian();
-void AddSC_instance_the_eye();
-void AddSC_the_eye();
-void AddSC_boss_gatewatcher_iron_hand();     //TK The Mechanar
-void AddSC_boss_nethermancer_sepethrea();
-void AddSC_boss_pathaleon_the_calculator();
-void AddSC_instance_mechanar();
-
-void AddSC_blades_edge_mountains();
-void AddSC_boss_doomlordkazzak();
-void AddSC_boss_doomwalker();
-void AddSC_hellfire_peninsula();
-void AddSC_nagrand();
-void AddSC_netherstorm();
-void AddSC_shadowmoon_valley();
-void AddSC_shattrath_city();
-void AddSC_terokkar_forest();
-void AddSC_zangarmarsh();
-void AddSC_wintergrasp();
-
-// battlegrounds
-
-// outdoor pvp
-void AddSC_outdoorpvp_ep();
-void AddSC_outdoorpvp_hp();
-void AddSC_outdoorpvp_na();
-void AddSC_outdoorpvp_si();
-void AddSC_outdoorpvp_tf();
-void AddSC_outdoorpvp_zm();
-void AddSC_outdoorpvp_wg();
-
-// player
-void AddSC_chat_log();
-
-#endif
-
-void AddScripts()
-{
-    AddExampleScripts();
-    AddSpellScripts();
-#ifdef SCRIPTS
-    AddWorldScripts();
-    AddEasternKingdomsScripts();
-    AddKalimdorScripts();
-    AddOutlandScripts();
-    AddNorthrendScripts();
-    AddBattlegroundScripts();
-    AddOutdoorPvPScripts();
-    AddCustomScripts();
-	//guildhouse
-	AddSC_guildmaster();
-#endif
-}
-
-void AddExampleScripts()
-{
-    AddSC_example_creature();
-    AddSC_example_escort();
-    AddSC_example_gossip_codebox();
-    AddSC_example_misc();
-}
-
-void AddSpellScripts()
-{
-    AddSC_deathknight_spell_scripts();
-    AddSC_druid_spell_scripts();
-    AddSC_generic_spell_scripts();
-    AddSC_hunter_spell_scripts();
-    AddSC_mage_spell_scripts();
-    AddSC_paladin_spell_scripts();
-    AddSC_priest_spell_scripts();
-    AddSC_rogue_spell_scripts();
-    AddSC_shaman_spell_scripts();
-    AddSC_warlock_spell_scripts();
-    AddSC_warrior_spell_scripts();
-    AddSC_quest_spell_scripts();
-    AddSC_item_spell_scripts();
-    AddSC_example_spell_scripts();
-}
-
-void AddWorldScripts()
-{
-#ifdef SCRIPTS
-	AddSC_npc_mount();
-    AddSC_areatrigger_scripts();
-    AddSC_boss_emeriss();
-    AddSC_boss_taerar();
-    AddSC_boss_ysondre();
-    AddSC_generic_creature();
-    AddSC_go_scripts();
-    AddSC_guards();
-    AddSC_item_scripts();
-    AddSC_npc_professions();
-    AddSC_npc_innkeeper();
-    AddSC_npcs_special();
-    AddSC_npc_taxi();
-    AddSC_achievement_scripts();
-    AddSC_chat_log();
-	AddSC_npc_customize();
-#endif
-}
-
-void AddEasternKingdomsScripts()
-{
-#ifdef SCRIPTS
-    AddSC_alterac_valley();                 //Alterac Valley
-    AddSC_boss_balinda();
-    AddSC_boss_drekthar();
-    AddSC_boss_galvangar();
-    AddSC_boss_vanndar();
-    AddSC_blackrock_depths();               //Blackrock Depths
-    AddSC_boss_ambassador_flamelash();
-    AddSC_boss_anubshiah();
-    AddSC_boss_draganthaurissan();
-    AddSC_boss_general_angerforge();
-    AddSC_boss_gorosh_the_dervish();
-    AddSC_boss_grizzle();
-    AddSC_boss_high_interrogator_gerstahn();
-    AddSC_boss_magmus();
-    AddSC_boss_moira_bronzebeard();
-    AddSC_boss_tomb_of_seven();
-    AddSC_instance_blackrock_depths();
-    AddSC_boss_drakkisath();                //Blackrock Spire
-    AddSC_boss_halycon();
-    AddSC_boss_highlordomokk();
-    AddSC_boss_mothersmolderweb();
-    AddSC_boss_overlordwyrmthalak();
-    AddSC_boss_shadowvosh();
-    AddSC_boss_thebeast();
-    AddSC_boss_warmastervoone();
-    AddSC_boss_quatermasterzigris();
-    AddSC_boss_pyroguard_emberseer();
-    AddSC_boss_gyth();
-    AddSC_boss_rend_blackhand();
-    AddSC_boss_razorgore();                 //Blackwing lair
-    AddSC_boss_vael();
-    AddSC_boss_broodlord();
-    AddSC_boss_firemaw();
-    AddSC_boss_ebonroc();
-    AddSC_boss_flamegor();
-    AddSC_boss_chromaggus();
-    AddSC_boss_nefarian();
-    AddSC_boss_victor_nefarius();
-    AddSC_boss_mr_smite();
-    AddSC_deadmines();                      //Deadmines
-    AddSC_instance_deadmines();
-    AddSC_gnomeregan();                     //Gnomeregan
-    AddSC_instance_gnomeregan();
-    AddSC_boss_attumen();                   //Karazhan
-    AddSC_boss_curator();
-    AddSC_boss_maiden_of_virtue();
-    AddSC_boss_shade_of_aran();
-    AddSC_boss_malchezaar();
-    AddSC_boss_terestian_illhoof();
-    AddSC_boss_moroes();
-    AddSC_bosses_opera();
-    AddSC_boss_netherspite();
-    AddSC_instance_karazhan();
-    AddSC_karazhan();
-    AddSC_boss_nightbane();
-    AddSC_boss_felblood_kaelthas();         // Magister's Terrace
-    AddSC_boss_selin_fireheart();
-    AddSC_boss_vexallus();
-    AddSC_boss_priestess_delrissa();
-    AddSC_instance_magisters_terrace();
-    AddSC_magisters_terrace();
-    AddSC_boss_lucifron();                  //Molten core
-    AddSC_boss_magmadar();
-    AddSC_boss_gehennas();
-    AddSC_boss_garr();
-    AddSC_boss_baron_geddon();
-    AddSC_boss_shazzrah();
-    AddSC_boss_golemagg();
-    AddSC_boss_sulfuron();
-    AddSC_boss_majordomo();
-    AddSC_boss_ragnaros();
-    AddSC_instance_molten_core();
-    AddSC_molten_core();
-    AddSC_the_scarlet_enclave();            //Scarlet Enclave
-    AddSC_the_scarlet_enclave_c1();
-    AddSC_the_scarlet_enclave_c2();
-    AddSC_the_scarlet_enclave_c5();
-    AddSC_boss_arcanist_doan();             //Scarlet Monastery
-    AddSC_boss_azshir_the_sleepless();
-    AddSC_boss_bloodmage_thalnos();
-    AddSC_boss_headless_horseman();
-    AddSC_boss_herod();
-    AddSC_boss_high_inquisitor_fairbanks();
-    AddSC_boss_houndmaster_loksey();
-    AddSC_boss_interrogator_vishas();
-    AddSC_boss_scorn();
-    AddSC_instance_scarlet_monastery();
-    AddSC_boss_mograine_and_whitemane();
-    AddSC_boss_darkmaster_gandling();       //Scholomance
-    AddSC_boss_death_knight_darkreaver();
-    AddSC_boss_theolenkrastinov();
-    AddSC_boss_illuciabarov();
-    AddSC_boss_instructormalicia();
-    AddSC_boss_jandicebarov();
-    AddSC_boss_kormok();
-    AddSC_boss_lordalexeibarov();
-    AddSC_boss_lorekeeperpolkelt();
-    AddSC_boss_rasfrost();
-    AddSC_boss_theravenian();
-    AddSC_boss_vectus();
-    AddSC_instance_scholomance();
-    AddSC_shadowfang_keep();                //Shadowfang keep
-    AddSC_instance_shadowfang_keep();
-    AddSC_boss_magistrate_barthilas();      //Stratholme
-    AddSC_boss_maleki_the_pallid();
-    AddSC_boss_nerubenkan();
-    AddSC_boss_cannon_master_willey();
-    AddSC_boss_baroness_anastari();
-    AddSC_boss_ramstein_the_gorger();
-    AddSC_boss_timmy_the_cruel();
-    AddSC_boss_postmaster_malown();
-    AddSC_boss_baron_rivendare();
-    AddSC_boss_dathrohan_balnazzar();
-    AddSC_boss_order_of_silver_hand();
-    AddSC_instance_stratholme();
-    AddSC_stratholme();
-    AddSC_sunken_temple();                  // Sunken Temple
-    AddSC_instance_sunken_temple();
-    AddSC_instance_sunwell_plateau();       //Sunwell Plateau
-    AddSC_boss_kalecgos();
-    AddSC_boss_brutallus();
-    AddSC_boss_felmyst();
-    AddSC_boss_eredar_twins();
-    AddSC_boss_muru();
-    AddSC_boss_kiljaeden();
-    AddSC_sunwell_plateau();
-    AddSC_boss_archaedas();                 //Uldaman
-    AddSC_boss_ironaya();
-    AddSC_uldaman();
-    AddSC_instance_uldaman();
-    AddSC_boss_akilzon();                   //Zul'Aman
-    AddSC_boss_halazzi();
-    AddSC_boss_hex_lord_malacrass();
-    AddSC_boss_janalai();
-    AddSC_boss_nalorakk();
-    AddSC_boss_zuljin();
-    AddSC_instance_zulaman();
-    AddSC_zulaman();
-    AddSC_boss_jeklik();                    //Zul'Gurub
-    AddSC_boss_venoxis();
-    AddSC_boss_marli();
-    AddSC_boss_mandokir();
-    AddSC_boss_gahzranka();
-    AddSC_boss_thekal();
-    AddSC_boss_arlokk();
-    AddSC_boss_jindo();
-    AddSC_boss_hakkar();
-    AddSC_boss_grilek();
-    AddSC_boss_hazzarah();
-    AddSC_boss_renataki();
-    AddSC_boss_wushoolay();
-    AddSC_instance_zulgurub();
-
-    //AddSC_alterac_mountains();
-    AddSC_arathi_highlands();
-    AddSC_blasted_lands();
-    AddSC_boss_kruul();
-    AddSC_burning_steppes();
-    AddSC_dun_morogh();
-    AddSC_duskwood();
-    AddSC_eastern_plaguelands();
-    AddSC_elwynn_forest();
-    AddSC_eversong_woods();
-    AddSC_ghostlands();
-    AddSC_hinterlands();
-    AddSC_ironforge();
-    AddSC_isle_of_queldanas();
-    AddSC_loch_modan();
-    AddSC_redridge_mountains();
-    AddSC_searing_gorge();
-    AddSC_silvermoon_city();
-    AddSC_silverpine_forest();
-    AddSC_stormwind_city();
-    AddSC_stranglethorn_vale();
-    AddSC_swamp_of_sorrows();
-    AddSC_tirisfal_glades();
-    AddSC_undercity();
-    AddSC_western_plaguelands();
-    AddSC_westfall();
-    AddSC_wetlands();
-#endif
-}
-
-void AddKalimdorScripts()
-{
-#ifdef SCRIPTS
-    AddSC_blackfathom_deeps();              //Blackfathom Depths
-    AddSC_boss_gelihast();
-    AddSC_boss_kelris();
-    AddSC_boss_aku_mai();
-    AddSC_instance_blackfathom_deeps();
-    AddSC_hyjal();                          //CoT Battle for Mt. Hyjal
-    AddSC_boss_archimonde();
-    AddSC_instance_mount_hyjal();
-    AddSC_hyjal_trash();
-    AddSC_boss_rage_winterchill();
-    AddSC_boss_anetheron();
-    AddSC_boss_kazrogal();
-    AddSC_boss_azgalor();
-    AddSC_boss_captain_skarloc();           //CoT Old Hillsbrad
-    AddSC_boss_epoch_hunter();
-    AddSC_boss_lieutenant_drake();
-    AddSC_instance_old_hillsbrad();
-    AddSC_old_hillsbrad();
-    AddSC_boss_aeonus();                    //CoT The Dark Portal
-    AddSC_boss_chrono_lord_deja();
-    AddSC_boss_temporus();
-    AddSC_dark_portal();
-    AddSC_instance_dark_portal();
-    AddSC_boss_epoch();                     //CoT Culling Of Stratholme
-    AddSC_boss_infinite_corruptor();
-    AddSC_boss_salramm();
-    AddSC_boss_mal_ganis();
-    AddSC_boss_meathook();
-    AddSC_culling_of_stratholme();
-    AddSC_instance_culling_of_stratholme();
-    AddSC_boss_celebras_the_cursed();       //Maraudon
-    AddSC_boss_landslide();
-    AddSC_boss_noxxion();
-    AddSC_boss_ptheradras();
-    AddSC_boss_onyxia();                    //Onyxia's Lair
-    AddSC_instance_onyxias_lair();
-    AddSC_boss_amnennar_the_coldbringer();  //Razorfen Downs
-    AddSC_razorfen_downs();
-    AddSC_instance_razorfen_downs();
-    AddSC_razorfen_kraul();                 //Razorfen Kraul
-    AddSC_boss_kurinnaxx();                 //Ruins of ahn'qiraj
-    AddSC_boss_rajaxx();
-    AddSC_boss_moam();
-    AddSC_boss_buru();
-    AddSC_boss_ayamiss();
-    AddSC_boss_ossirian();
-    AddSC_instance_ruins_of_ahnqiraj();
-    AddSC_boss_cthun();                     //Temple of ahn'qiraj
-    AddSC_boss_fankriss();
-    AddSC_boss_huhuran();
-    AddSC_bug_trio();
-    AddSC_boss_sartura();
-    AddSC_boss_skeram();
-    AddSC_boss_twinemperors();
-    AddSC_mob_anubisath_sentinel();
-    AddSC_instance_temple_of_ahnqiraj();
-    AddSC_wailing_caverns();                //Wailing caverns
-    AddSC_instance_wailing_caverns();
-    AddSC_zulfarrak();                      //Zul'Farrak generic
-    AddSC_instance_zulfarrak();             //Zul'Farrak instance script
-
-    AddSC_ashenvale();
-    AddSC_azshara();
-    AddSC_azuremyst_isle();
-    AddSC_bloodmyst_isle();
-    AddSC_boss_azuregos();
-    AddSC_darkshore();
-    AddSC_desolace();
-    AddSC_durotar();
-    AddSC_dustwallow_marsh();
-    AddSC_felwood();
-    AddSC_feralas();
-    AddSC_moonglade();
-    AddSC_mulgore();
-    AddSC_orgrimmar();
-    AddSC_silithus();
-    AddSC_stonetalon_mountains();
-    AddSC_tanaris();
-    AddSC_teldrassil();
-    AddSC_the_barrens();
-    AddSC_thousand_needles();
-    AddSC_thunder_bluff();
-    AddSC_ungoro_crater();
-    AddSC_winterspring();
-#endif
-}
-
-void AddOutlandScripts()
-{
-#ifdef SCRIPTS
-    AddSC_boss_exarch_maladaar();           //Auchindoun Auchenai Crypts
-    AddSC_boss_shirrak_the_dead_watcher();
-    AddSC_boss_nexusprince_shaffar();       //Auchindoun Mana Tombs
-    AddSC_boss_pandemonius();
-    AddSC_boss_darkweaver_syth();           //Auchindoun Sekketh Halls
-    AddSC_boss_talon_king_ikiss();
-    AddSC_instance_sethekk_halls();
-    AddSC_instance_shadow_labyrinth();      //Auchindoun Shadow Labyrinth
-    AddSC_boss_ambassador_hellmaw();
-    AddSC_boss_blackheart_the_inciter();
-    AddSC_boss_grandmaster_vorpil();
-    AddSC_boss_murmur();
-    AddSC_black_temple();                   //Black Temple
-    AddSC_boss_illidan();
-    AddSC_boss_shade_of_akama();
-    AddSC_boss_supremus();
-    AddSC_boss_gurtogg_bloodboil();
-    AddSC_boss_mother_shahraz();
-    AddSC_boss_reliquary_of_souls();
-    AddSC_boss_teron_gorefiend();
-    AddSC_boss_najentus();
-    AddSC_boss_illidari_council();
-    AddSC_instance_black_temple();
-    AddSC_boss_fathomlord_karathress();     //CR Serpent Shrine Cavern
-    AddSC_boss_hydross_the_unstable();
-    AddSC_boss_lady_vashj();
-    AddSC_boss_leotheras_the_blind();
-    AddSC_boss_morogrim_tidewalker();
-    AddSC_instance_serpentshrine_cavern();
-    AddSC_boss_the_lurker_below();
-    AddSC_boss_hydromancer_thespia();       //CR Steam Vault
-    AddSC_boss_mekgineer_steamrigger();
-    AddSC_boss_warlord_kalithresh();
-    AddSC_instance_steam_vault();
-    AddSC_boss_hungarfen();                 //CR Underbog
-    AddSC_boss_the_black_stalker();
-    AddSC_boss_gruul();                     //Gruul's Lair
-    AddSC_boss_high_king_maulgar();
-    AddSC_instance_gruuls_lair();
-    AddSC_boss_broggok();                   //HC Blood Furnace
-    AddSC_boss_kelidan_the_breaker();
-    AddSC_boss_the_maker();
-    AddSC_instance_blood_furnace();
-    AddSC_boss_magtheridon();               //HC Magtheridon's Lair
-    AddSC_instance_magtheridons_lair();
-    AddSC_boss_grand_warlock_nethekurse();  //HC Shattered Halls
-    AddSC_boss_warbringer_omrogg();
-    AddSC_boss_warchief_kargath_bladefist();
-    AddSC_instance_shattered_halls();
-    AddSC_boss_watchkeeper_gargolmar();     //HC Ramparts
-    AddSC_boss_omor_the_unscarred();
-    AddSC_boss_vazruden_the_herald();
-    AddSC_instance_ramparts();
-    AddSC_arcatraz();                       //TK Arcatraz
-    AddSC_boss_harbinger_skyriss();
-    AddSC_instance_arcatraz();
-    AddSC_boss_high_botanist_freywinn();    //TK Botanica
-    AddSC_boss_laj();
-    AddSC_boss_warp_splinter();
-    AddSC_boss_alar();                      //TK The Eye
-    AddSC_boss_kaelthas();
-    AddSC_boss_void_reaver();
-    AddSC_boss_high_astromancer_solarian();
-    AddSC_instance_the_eye();
-    AddSC_the_eye();
-    AddSC_boss_gatewatcher_iron_hand();     //TK The Mechanar
-    AddSC_boss_nethermancer_sepethrea();
-    AddSC_boss_pathaleon_the_calculator();
-    AddSC_instance_mechanar();
-
-    AddSC_blades_edge_mountains();
-    AddSC_boss_doomlordkazzak();
-    AddSC_boss_doomwalker();
-    AddSC_hellfire_peninsula();
-    AddSC_nagrand();
-    AddSC_netherstorm();
-    AddSC_shadowmoon_valley();
-    AddSC_shattrath_city();
-    AddSC_terokkar_forest();
-    AddSC_zangarmarsh();
-#endif
-}
-
-void AddNorthrendScripts()
-{
-#ifdef SCRIPTS
-    AddSC_boss_slad_ran();               //Gundrak
-    AddSC_boss_moorabi();
-    AddSC_boss_drakkari_colossus();
-    AddSC_boss_gal_darah();
-    AddSC_boss_eck();
-    AddSC_instance_gundrak();
-    AddSC_boss_amanitar();
-    AddSC_boss_taldaram();              //Azjol-Nerub Ahn'kahet
-    AddSC_boss_elder_nadox();
-    AddSC_boss_jedoga_shadowseeker();
-    AddSC_boss_volazj();
-    AddSC_instance_ahnkahet();
-    AddSC_boss_argent_challenge();      //Trial of the Champion
-    AddSC_boss_black_knight();
-    AddSC_boss_grand_champions();
-    AddSC_instance_trial_of_the_champion();
-    AddSC_trial_of_the_champion();
-    AddSC_boss_anubarak_trial();        //Trial of the Crusader
-    AddSC_boss_faction_champions();
-    AddSC_boss_lord_jaraxxus();
-    AddSC_trial_of_the_crusader();
-    AddSC_boss_twins_valkyr();
-    AddSC_instance_trial_of_the_crusader();
-	AddSC_boss_beasts_of_northrend();
-    AddSC_boss_krik_thir();             //Azjol-Nerub Azjol-Nerub
-    AddSC_boss_hadronox();
-    AddSC_boss_anub_arak();
-    AddSC_instance_azjol_nerub();
-    AddSC_boss_anubrekhan();            //Naxxramas
-    AddSC_boss_maexxna();
-    AddSC_boss_patchwerk();
-    AddSC_boss_grobbulus();
-    AddSC_boss_razuvious();
-    AddSC_boss_kelthuzad();
-    AddSC_boss_loatheb();
-    AddSC_boss_noth();
-    AddSC_boss_gluth();
-    AddSC_boss_sapphiron();
-    AddSC_boss_four_horsemen();
-    AddSC_boss_faerlina();
-    AddSC_boss_heigan();
-    AddSC_boss_gothik();
-    AddSC_boss_thaddius();
-    AddSC_instance_naxxramas();
-    AddSC_boss_magus_telestra();        //The Nexus Nexus
-    AddSC_boss_anomalus();
-    AddSC_boss_ormorok();
-    AddSC_boss_keristrasza();
-    AddSC_instance_nexus();
-	AddSC_boss_malygos();            //The Nexus Eye Of Eternity
-    AddSC_instance_eye_of_eternity();
-    AddSC_npc_alexstraza();
-    AddSC_boss_drakos();                //The Nexus The Oculus
-    AddSC_boss_urom();
-    AddSC_instance_oculus();
-    AddSC_oculus();
-
-    AddSC_boss_sartharion();            //Obsidian Sanctum
-    AddSC_instance_obsidian_sanctum();
-    AddSC_boss_bjarngrim();             //Ulduar Halls of Lightning
-    AddSC_boss_loken();
-    AddSC_boss_ionar();
-    AddSC_boss_volkhan();
-    AddSC_instance_halls_of_lightning();
-    AddSC_boss_maiden_of_grief();       //Ulduar Halls of Stone
-    AddSC_boss_krystallus();
-    AddSC_boss_sjonnir();
-    AddSC_instance_halls_of_stone();
-    AddSC_halls_of_stone();
-    AddSC_boss_auriaya();               //Ulduar Ulduar
-    AddSC_boss_flame_leviathan();
-    AddSC_boss_ignis();
-    AddSC_boss_razorscale();
-    AddSC_boss_xt002();
-    AddSC_bosses_assembly_of_iron();
-    AddSC_boss_kologarn();
-    AddSC_ulduar_teleporter();
-    AddSC_instance_ulduar();
-    AddSC_boss_keleseth();              //Utgarde Keep
-    AddSC_boss_skarvald_dalronn();
-    AddSC_boss_ingvar_the_plunderer();
-    AddSC_instance_utgarde_keep();
-    AddSC_boss_svala();                 //Utgarde pinnacle
-    AddSC_boss_palehoof();
-    AddSC_boss_skadi();
-    AddSC_boss_ymiron();
-    AddSC_instance_utgarde_pinnacle();
-    AddSC_utgarde_keep();
-    AddSC_boss_archavon();              //Vault of Archavon
-    AddSC_boss_emalon();
-    AddSC_boss_koralon();
-    AddSC_boss_toravon();
-    AddSC_instance_archavon();
-    AddSC_boss_trollgore();             //Drak'Tharon Keep
-    AddSC_boss_novos();
-    AddSC_boss_dred();
-    AddSC_boss_tharon_ja();
-    AddSC_instance_drak_tharon();
-    AddSC_boss_cyanigosa();             //Violet Hold
-    AddSC_boss_erekem();
-    AddSC_boss_ichoron();
-    AddSC_boss_lavanthor();
-    AddSC_boss_moragg();
-    AddSC_boss_xevozz();
-    AddSC_boss_zuramat();
-    AddSC_instance_violet_hold();
-    AddSC_violet_hold();
-    AddSC_instance_forge_of_souls();   //Forge of Souls
-    AddSC_forge_of_souls();
-    AddSC_boss_bronjahm();
-    AddSC_boss_devourer_of_souls();
-    AddSC_instance_pit_of_saron();      //Pit of Saron
-    AddSC_pit_of_saron();
-    AddSC_boss_garfrost();
-    AddSC_boss_ick();
-    AddSC_boss_tyrannus();
-    AddSC_instance_halls_of_reflection();   // Halls of Reflection
-    AddSC_halls_of_reflection();
-    AddSC_boss_falric();
-    AddSC_boss_marwyn();
-	AddSC_boss_lich_king_hr();
-    AddSC_instance_icecrown_citadel();    // Icecrown Citadel
-    AddSC_icecrown_citadel();
-    AddSC_boss_valithria();
-    AddSC_boss_lichking();
-    AddSC_boss_sindragosa();
-    AddSC_boss_rotface();
-    AddSC_boss_rat_des_blutes();
-    AddSC_boss_professor_putricide();
-    AddSC_boss_lord_marrowgar();
-    AddSC_boss_lady_deathwhisper();
-    AddSC_boss_festergut();
-    AddSC_boss_deathbringer_saurfang();
-    AddSC_boss_blood_queen_lanathel();
-    AddSC_icecrown_citadel_teleport();
-	AddSC_boss_gunship_battle();
-	AddSC_boss_baltharus();	//RubySanctum
-    AddSC_boss_halion();
-    AddSC_boss_ragefire();
-    AddSC_boss_zarithrian();
-    AddSC_instance_ruby_sanctum();
-
-    AddSC_dalaran();
-    AddSC_borean_tundra();
-    AddSC_dragonblight();
-    AddSC_grizzly_hills();
-    AddSC_howling_fjord();
-    AddSC_icecrown();
-    AddSC_sholazar_basin();
-    AddSC_storm_peaks();
-    AddSC_zuldrak();
-    AddSC_crystalsong_forest();
-    AddSC_wintergrasp();
-#endif
-}
-
-void AddOutdoorPvPScripts()
-{
-#ifdef SCRIPTS
-    AddSC_outdoorpvp_ep();
-    AddSC_outdoorpvp_hp();
-    AddSC_outdoorpvp_na();
-    AddSC_outdoorpvp_si();
-    AddSC_outdoorpvp_tf();
-    AddSC_outdoorpvp_zm();
-    AddSC_outdoorpvp_wg();
-#endif
-}
-
-void AddBattlegroundScripts()
-{
-#ifdef SCRIPTS
-#endif
-}
-
-#ifdef SCRIPTS
-/* This is where custom scripts' loading functions should be declared. */
-
-#endif
-
-void AddCustomScripts()
-{
-#ifdef SCRIPTS
-    /* This is where custom scripts should be added. */
-    //TeleNPC2
-    AddSC_npc_teleport();
-#endif
-}
+void AddSC_areatrigger_scripts();
+void AddSC_boss_emeriss();
+void AddSC_boss_taerar();
+void AddSC_boss_ysondre();
+void AddSC_generic_creature();
+void AddSC_go_scripts();
+void AddSC_guards();
+void AddSC_item_scripts();
+void AddSC_npc_professions();
+void AddSC_npc_innkeeper();
+void AddSC_npcs_special();
+void AddSC_npc_taxi();
+void AddSC_achievement_scripts();
+void AddSC_npc_customize();
+
+//guildhouse
+void AddSC_guildmaster();
+
+//eastern kingdoms
+void AddSC_alterac_valley();                 //Alterac Valley
+void AddSC_boss_balinda();
+void AddSC_boss_drekthar();
+void AddSC_boss_galvangar();
+void AddSC_boss_vanndar();
+void AddSC_blackrock_depths();               //Blackrock Depths
+void AddSC_boss_ambassador_flamelash();
+void AddSC_boss_anubshiah();
+void AddSC_boss_draganthaurissan();
+void AddSC_boss_general_angerforge();
+void AddSC_boss_gorosh_the_dervish();
+void AddSC_boss_grizzle();
+void AddSC_boss_high_interrogator_gerstahn();
+void AddSC_boss_magmus();
+void AddSC_boss_moira_bronzebeard();
+void AddSC_boss_tomb_of_seven();
+void AddSC_instance_blackrock_depths();
+void AddSC_boss_drakkisath();                //Blackrock Spire
+void AddSC_boss_halycon();
+void AddSC_boss_highlordomokk();
+void AddSC_boss_mothersmolderweb();
+void AddSC_boss_overlordwyrmthalak();
+void AddSC_boss_shadowvosh();
+void AddSC_boss_thebeast();
+void AddSC_boss_warmastervoone();
+void AddSC_boss_quatermasterzigris();
+void AddSC_boss_pyroguard_emberseer();
+void AddSC_boss_gyth();
+void AddSC_boss_rend_blackhand();
+void AddSC_boss_razorgore();                 //Blackwing lair
+void AddSC_boss_vael();
+void AddSC_boss_broodlord();
+void AddSC_boss_firemaw();
+void AddSC_boss_ebonroc();
+void AddSC_boss_flamegor();
+void AddSC_boss_chromaggus();
+void AddSC_boss_nefarian();
+void AddSC_boss_victor_nefarius();
+void AddSC_boss_mr_smite();
+void AddSC_deadmines();                      //Deadmines
+void AddSC_instance_deadmines();
+void AddSC_gnomeregan();                     //Gnomeregan
+void AddSC_instance_gnomeregan();
+void AddSC_boss_attumen();                   //Karazhan
+void AddSC_boss_curator();
+void AddSC_boss_maiden_of_virtue();
+void AddSC_boss_shade_of_aran();
+void AddSC_boss_malchezaar();
+void AddSC_boss_terestian_illhoof();
+void AddSC_boss_moroes();
+void AddSC_bosses_opera();
+void AddSC_boss_netherspite();
+void AddSC_instance_karazhan();
+void AddSC_karazhan();
+void AddSC_boss_nightbane();
+void AddSC_boss_felblood_kaelthas();         // Magister's Terrace
+void AddSC_boss_selin_fireheart();
+void AddSC_boss_vexallus();
+void AddSC_boss_priestess_delrissa();
+void AddSC_instance_magisters_terrace();
+void AddSC_magisters_terrace();
+void AddSC_boss_lucifron();                  //Molten core
+void AddSC_boss_magmadar();
+void AddSC_boss_gehennas();
+void AddSC_boss_garr();
+void AddSC_boss_baron_geddon();
+void AddSC_boss_shazzrah();
+void AddSC_boss_golemagg();
+void AddSC_boss_sulfuron();
+void AddSC_boss_majordomo();
+void AddSC_boss_ragnaros();
+void AddSC_instance_molten_core();
+void AddSC_molten_core();
+void AddSC_the_scarlet_enclave();            //Scarlet Enclave
+void AddSC_the_scarlet_enclave_c1();
+void AddSC_the_scarlet_enclave_c2();
+void AddSC_the_scarlet_enclave_c5();
+void AddSC_boss_arcanist_doan();             //Scarlet Monastery
+void AddSC_boss_azshir_the_sleepless();
+void AddSC_boss_bloodmage_thalnos();
+void AddSC_boss_headless_horseman();
+void AddSC_boss_herod();
+void AddSC_boss_high_inquisitor_fairbanks();
+void AddSC_boss_houndmaster_loksey();
+void AddSC_boss_interrogator_vishas();
+void AddSC_boss_scorn();
+void AddSC_instance_scarlet_monastery();
+void AddSC_boss_mograine_and_whitemane();
+void AddSC_boss_darkmaster_gandling();       //Scholomance
+void AddSC_boss_death_knight_darkreaver();
+void AddSC_boss_theolenkrastinov();
+void AddSC_boss_illuciabarov();
+void AddSC_boss_instructormalicia();
+void AddSC_boss_jandicebarov();
+void AddSC_boss_kormok();
+void AddSC_boss_lordalexeibarov();
+void AddSC_boss_lorekeeperpolkelt();
+void AddSC_boss_rasfrost();
+void AddSC_boss_theravenian();
+void AddSC_boss_vectus();
+void AddSC_instance_scholomance();
+void AddSC_shadowfang_keep();                //Shadowfang keep
+void AddSC_instance_shadowfang_keep();
+void AddSC_boss_magistrate_barthilas();      //Stratholme
+void AddSC_boss_maleki_the_pallid();
+void AddSC_boss_nerubenkan();
+void AddSC_boss_cannon_master_willey();
+void AddSC_boss_baroness_anastari();
+void AddSC_boss_ramstein_the_gorger();
+void AddSC_boss_timmy_the_cruel();
+void AddSC_boss_postmaster_malown();
+void AddSC_boss_baron_rivendare();
+void AddSC_boss_dathrohan_balnazzar();
+void AddSC_boss_order_of_silver_hand();
+void AddSC_instance_stratholme();
+void AddSC_stratholme();
+void AddSC_sunken_temple();                  // Sunken Temple
+void AddSC_instance_sunken_temple();
+void AddSC_instance_sunwell_plateau();       //Sunwell Plateau
+void AddSC_boss_kalecgos();
+void AddSC_boss_brutallus();
+void AddSC_boss_felmyst();
+void AddSC_boss_eredar_twins();
+void AddSC_boss_muru();
+void AddSC_boss_kiljaeden();
+void AddSC_sunwell_plateau();
+void AddSC_boss_archaedas();                 //Uldaman
+void AddSC_boss_ironaya();
+void AddSC_uldaman();
+void AddSC_instance_uldaman();
+void AddSC_boss_akilzon();                   //Zul'Aman
+void AddSC_boss_halazzi();
+void AddSC_boss_hex_lord_malacrass();
+void AddSC_boss_janalai();
+void AddSC_boss_nalorakk();
+void AddSC_boss_zuljin();
+void AddSC_instance_zulaman();
+void AddSC_zulaman();
+void AddSC_boss_jeklik();                    //Zul'Gurub
+void AddSC_boss_venoxis();
+void AddSC_boss_marli();
+void AddSC_boss_mandokir();
+void AddSC_boss_gahzranka();
+void AddSC_boss_thekal();
+void AddSC_boss_arlokk();
+void AddSC_boss_jindo();
+void AddSC_boss_hakkar();
+void AddSC_boss_grilek();
+void AddSC_boss_hazzarah();
+void AddSC_boss_renataki();
+void AddSC_boss_wushoolay();
+void AddSC_instance_zulgurub();
+
+//void AddSC_alterac_mountains();
+void AddSC_arathi_highlands();
+void AddSC_blasted_lands();
+void AddSC_boss_kruul();
+void AddSC_burning_steppes();
+void AddSC_dun_morogh();
+void AddSC_duskwood();
+void AddSC_eastern_plaguelands();
+void AddSC_elwynn_forest();
+void AddSC_eversong_woods();
+void AddSC_ghostlands();
+void AddSC_hinterlands();
+void AddSC_ironforge();
+void AddSC_isle_of_queldanas();
+void AddSC_loch_modan();
+void AddSC_redridge_mountains();
+void AddSC_searing_gorge();
+void AddSC_silvermoon_city();
+void AddSC_silverpine_forest();
+void AddSC_stormwind_city();
+void AddSC_stranglethorn_vale();
+void AddSC_swamp_of_sorrows();
+void AddSC_tirisfal_glades();
+void AddSC_undercity();
+void AddSC_western_plaguelands();
+void AddSC_westfall();
+void AddSC_wetlands();
+
+//kalimdor
+void AddSC_blackfathom_deeps();              //Blackfathom Depths
+void AddSC_boss_gelihast();
+void AddSC_boss_kelris();
+void AddSC_boss_aku_mai();
+void AddSC_instance_blackfathom_deeps();
+void AddSC_hyjal();                          //CoT Battle for Mt. Hyjal
+void AddSC_boss_archimonde();
+void AddSC_instance_mount_hyjal();
+void AddSC_hyjal_trash();
+void AddSC_boss_rage_winterchill();
+void AddSC_boss_anetheron();
+void AddSC_boss_kazrogal();
+void AddSC_boss_azgalor();
+void AddSC_boss_captain_skarloc();           //CoT Old Hillsbrad
+void AddSC_boss_epoch_hunter();
+void AddSC_boss_lieutenant_drake();
+void AddSC_instance_old_hillsbrad();
+void AddSC_old_hillsbrad();
+void AddSC_boss_aeonus();                    //CoT The Dark Portal
+void AddSC_boss_chrono_lord_deja();
+void AddSC_boss_temporus();
+void AddSC_dark_portal();
+void AddSC_instance_dark_portal();
+void AddSC_boss_epoch();                     //CoT Culling Of Stratholme
+void AddSC_boss_infinite_corruptor();
+void AddSC_boss_salramm();
+void AddSC_boss_mal_ganis();
+void AddSC_boss_meathook();
+void AddSC_culling_of_stratholme();
+void AddSC_instance_culling_of_stratholme();
+void AddSC_boss_celebras_the_cursed();       //Maraudon
+void AddSC_boss_landslide();
+void AddSC_boss_noxxion();
+void AddSC_boss_ptheradras();
+void AddSC_boss_onyxia();                    //Onyxia's Lair
+void AddSC_instance_onyxias_lair();
+void AddSC_boss_amnennar_the_coldbringer();  //Razorfen Downs
+void AddSC_razorfen_downs();
+void AddSC_instance_razorfen_downs();
+void AddSC_razorfen_kraul();                 //Razorfen Kraul
+void AddSC_boss_kurinnaxx();                 //Ruins of ahn'qiraj
+void AddSC_boss_rajaxx();
+void AddSC_boss_moam();
+void AddSC_boss_buru();
+void AddSC_boss_ayamiss();
+void AddSC_boss_ossirian();
+void AddSC_instance_ruins_of_ahnqiraj();
+void AddSC_boss_cthun();                     //Temple of ahn'qiraj
+void AddSC_boss_fankriss();
+void AddSC_boss_huhuran();
+void AddSC_bug_trio();
+void AddSC_boss_sartura();
+void AddSC_boss_skeram();
+void AddSC_boss_twinemperors();
+void AddSC_mob_anubisath_sentinel();
+void AddSC_instance_temple_of_ahnqiraj();
+void AddSC_wailing_caverns();                //Wailing caverns
+void AddSC_instance_wailing_caverns();
+void AddSC_zulfarrak();                     //Zul'Farrak generic
+void AddSC_instance_zulfarrak();            //Zul'Farrak instance script
+
+void AddSC_ashenvale();
+void AddSC_azshara();
+void AddSC_azuremyst_isle();
+void AddSC_bloodmyst_isle();
+void AddSC_boss_azuregos();
+void AddSC_darkshore();
+void AddSC_desolace();
+void AddSC_durotar();
+void AddSC_dustwallow_marsh();
+void AddSC_felwood();
+void AddSC_feralas();
+void AddSC_moonglade();
+void AddSC_mulgore();
+void AddSC_orgrimmar();
+void AddSC_silithus();
+void AddSC_stonetalon_mountains();
+void AddSC_tanaris();
+void AddSC_teldrassil();
+void AddSC_the_barrens();
+void AddSC_thousand_needles();
+void AddSC_thunder_bluff();
+void AddSC_ungoro_crater();
+void AddSC_winterspring();
+
+//northrend
+void AddSC_boss_slad_ran();
+void AddSC_boss_moorabi();
+void AddSC_boss_drakkari_colossus();
+void AddSC_boss_gal_darah();
+void AddSC_boss_eck();
+void AddSC_instance_gundrak();
+void AddSC_boss_krik_thir();             //Azjol-Nerub
+void AddSC_boss_hadronox();
+void AddSC_boss_anub_arak();
+void AddSC_instance_azjol_nerub();
+void AddSC_instance_ahnkahet();          //Azjol-Nerub Ahn'kahet
+void AddSC_boss_amanitar();
+void AddSC_boss_taldaram();
+void AddSC_boss_jedoga_shadowseeker();
+void AddSC_boss_elder_nadox();
+void AddSC_boss_volazj();
+void AddSC_boss_argent_challenge();      //Trial of the Champion
+void AddSC_boss_black_knight();
+void AddSC_boss_grand_champions();
+void AddSC_instance_trial_of_the_champion();
+void AddSC_trial_of_the_champion();
+void AddSC_boss_anubarak_trial();        //Trial of the Crusader
+void AddSC_boss_faction_champions();
+void AddSC_boss_lord_jaraxxus();
+void AddSC_boss_twins_valkyr();
+void AddSC_trial_of_the_crusader();
+void AddSC_instance_trial_of_the_crusader();
+void AddSC_boss_beasts_of_northrend();
+void AddSC_boss_anubrekhan();            //Naxxramas
+void AddSC_boss_maexxna();
+void AddSC_boss_patchwerk();
+void AddSC_boss_grobbulus();
+void AddSC_boss_razuvious();
+void AddSC_boss_kelthuzad();
+void AddSC_boss_loatheb();
+void AddSC_boss_noth();
+void AddSC_boss_gluth();
+void AddSC_boss_sapphiron();
+void AddSC_boss_four_horsemen();
+void AddSC_boss_faerlina();
+void AddSC_boss_heigan();
+void AddSC_boss_gothik();
+void AddSC_boss_thaddius();
+void AddSC_instance_naxxramas();
+void AddSC_boss_magus_telestra();        //The Nexus Nexus
+void AddSC_boss_anomalus();
+void AddSC_boss_ormorok();
+void AddSC_boss_keristrasza();
+void AddSC_instance_nexus();
+void AddSC_boss_malygos();            //The Nexus Eye Of Eternity
+void AddSC_instance_eye_of_eternity();
+void AddSC_npc_alexstraza();
+void AddSC_boss_drakos();                //The Nexus The Oculus
+void AddSC_boss_urom();
+void AddSC_instance_oculus();
+void AddSC_oculus();
+void AddSC_boss_sartharion();            //Obsidian Sanctum
+void AddSC_instance_obsidian_sanctum();
+void AddSC_boss_bjarngrim();             //Ulduar Halls of Lightning
+void AddSC_boss_loken();
+void AddSC_boss_ionar();
+void AddSC_boss_volkhan();
+void AddSC_instance_halls_of_lightning();
+void AddSC_boss_maiden_of_grief();       //Ulduar Halls of Stone
+void AddSC_boss_krystallus();
+void AddSC_boss_sjonnir();
+void AddSC_instance_halls_of_stone();
+void AddSC_halls_of_stone();
+void AddSC_boss_auriaya();               //Ulduar Ulduar
+void AddSC_boss_flame_leviathan();
+void AddSC_boss_ignis();
+void AddSC_boss_razorscale();
+void AddSC_boss_xt002();
+void AddSC_boss_kologarn();
+void AddSC_bosses_assembly_of_iron();
+void AddSC_ulduar_teleporter();
+void AddSC_instance_ulduar();
+void AddSC_boss_keleseth();              //Utgarde Keep
+void AddSC_boss_skarvald_dalronn();
+void AddSC_boss_ingvar_the_plunderer();
+void AddSC_instance_utgarde_keep();
+void AddSC_boss_svala();                 //Utgarde pinnacle
+void AddSC_boss_palehoof();
+void AddSC_boss_skadi();
+void AddSC_boss_ymiron();
+void AddSC_instance_utgarde_pinnacle();
+void AddSC_utgarde_keep();
+void AddSC_boss_archavon();              //Vault of Archavon
+void AddSC_boss_emalon();
+void AddSC_boss_koralon();
+void AddSC_boss_toravon();
+void AddSC_instance_archavon();
+void AddSC_boss_trollgore();             //Drak'Tharon Keep
+void AddSC_boss_novos();
+void AddSC_boss_dred();
+void AddSC_boss_tharon_ja();
+void AddSC_instance_drak_tharon();
+void AddSC_boss_cyanigosa();             //Violet Hold
+void AddSC_boss_erekem();
+void AddSC_boss_ichoron();
+void AddSC_boss_lavanthor();
+void AddSC_boss_moragg();
+void AddSC_boss_xevozz();
+void AddSC_boss_zuramat();
+void AddSC_instance_violet_hold();
+void AddSC_violet_hold();
+void AddSC_instance_forge_of_souls();   //Forge of Souls
+void AddSC_forge_of_souls();
+void AddSC_boss_bronjahm();
+void AddSC_boss_devourer_of_souls();
+void AddSC_instance_pit_of_saron();     //Pit of Saron
+void AddSC_pit_of_saron();
+void AddSC_boss_garfrost();
+void AddSC_boss_ick();
+void AddSC_boss_tyrannus();
+void AddSC_instance_halls_of_reflection();   // Halls of Reflection
+void AddSC_halls_of_reflection();
+void AddSC_boss_falric();
+void AddSC_boss_marwyn();
+void AddSC_boss_lich_king_hr();
+void AddSC_instance_icecrown_citadel();    // Icecrown Citadel
+void AddSC_icecrown_citadel();
+void AddSC_boss_valithria();
+void AddSC_boss_lichking();
+void AddSC_boss_sindragosa();
+void AddSC_boss_rotface();
+void AddSC_boss_rat_des_blutes();
+void AddSC_boss_professor_putricide();
+void AddSC_boss_lord_marrowgar();
+void AddSC_boss_lady_deathwhisper();
+void AddSC_boss_festergut();
+void AddSC_boss_deathbringer_saurfang();
+void AddSC_boss_blood_queen_lanathel();
+void AddSC_icecrown_citadel_teleport();
+void AddSC_boss_gunship_battle();
+void AddSC_boss_baltharus();	//RubySanctum
+void AddSC_boss_halion();
+void AddSC_boss_ragefire();
+void AddSC_boss_zarithrian();
+void AddSC_instance_ruby_sanctum();
+
+void AddSC_dalaran();
+void AddSC_borean_tundra();
+void AddSC_dragonblight();
+void AddSC_grizzly_hills();
+void AddSC_howling_fjord();
+void AddSC_icecrown();
+void AddSC_sholazar_basin();
+void AddSC_storm_peaks();
+void AddSC_zuldrak();
+void AddSC_crystalsong_forest();
+void AddSC_isle_of_conquest();
+
+//outland
+void AddSC_boss_exarch_maladaar();           //Auchindoun Auchenai Crypts
+void AddSC_boss_shirrak_the_dead_watcher();
+void AddSC_boss_nexusprince_shaffar();       //Auchindoun Mana Tombs
+void AddSC_boss_pandemonius();
+void AddSC_boss_darkweaver_syth();           //Auchindoun Sekketh Halls
+void AddSC_boss_talon_king_ikiss();
+void AddSC_instance_sethekk_halls();
+void AddSC_instance_shadow_labyrinth();      //Auchindoun Shadow Labyrinth
+void AddSC_boss_ambassador_hellmaw();
+void AddSC_boss_blackheart_the_inciter();
+void AddSC_boss_grandmaster_vorpil();
+void AddSC_boss_murmur();
+void AddSC_black_temple();                   //Black Temple
+void AddSC_boss_illidan();
+void AddSC_boss_shade_of_akama();
+void AddSC_boss_supremus();
+void AddSC_boss_gurtogg_bloodboil();
+void AddSC_boss_mother_shahraz();
+void AddSC_boss_reliquary_of_souls();
+void AddSC_boss_teron_gorefiend();
+void AddSC_boss_najentus();
+void AddSC_boss_illidari_council();
+void AddSC_instance_black_temple();
+void AddSC_boss_fathomlord_karathress();     //CR Serpent Shrine Cavern
+void AddSC_boss_hydross_the_unstable();
+void AddSC_boss_lady_vashj();
+void AddSC_boss_leotheras_the_blind();
+void AddSC_boss_morogrim_tidewalker();
+void AddSC_instance_serpentshrine_cavern();
+void AddSC_boss_the_lurker_below();
+void AddSC_boss_hydromancer_thespia();       //CR Steam Vault
+void AddSC_boss_mekgineer_steamrigger();
+void AddSC_boss_warlord_kalithresh();
+void AddSC_instance_steam_vault();
+void AddSC_boss_hungarfen();                 //CR Underbog
+void AddSC_boss_the_black_stalker();
+void AddSC_boss_gruul();                     //Gruul's Lair
+void AddSC_boss_high_king_maulgar();
+void AddSC_instance_gruuls_lair();
+void AddSC_boss_broggok();                   //HC Blood Furnace
+void AddSC_boss_kelidan_the_breaker();
+void AddSC_boss_the_maker();
+void AddSC_instance_blood_furnace();
+void AddSC_boss_magtheridon();               //HC Magtheridon's Lair
+void AddSC_instance_magtheridons_lair();
+void AddSC_boss_grand_warlock_nethekurse();  //HC Shattered Halls
+void AddSC_boss_warbringer_omrogg();
+void AddSC_boss_warchief_kargath_bladefist();
+void AddSC_instance_shattered_halls();
+void AddSC_boss_watchkeeper_gargolmar();     //HC Ramparts
+void AddSC_boss_omor_the_unscarred();
+void AddSC_boss_vazruden_the_herald();
+void AddSC_instance_ramparts();
+void AddSC_arcatraz();                       //TK Arcatraz
+void AddSC_boss_harbinger_skyriss();
+void AddSC_instance_arcatraz();
+void AddSC_boss_high_botanist_freywinn();    //TK Botanica
+void AddSC_boss_laj();
+void AddSC_boss_warp_splinter();
+void AddSC_boss_alar();                      //TK The Eye
+void AddSC_boss_kaelthas();
+void AddSC_boss_void_reaver();
+void AddSC_boss_high_astromancer_solarian();
+void AddSC_instance_the_eye();
+void AddSC_the_eye();
+void AddSC_boss_gatewatcher_iron_hand();     //TK The Mechanar
+void AddSC_boss_nethermancer_sepethrea();
+void AddSC_boss_pathaleon_the_calculator();
+void AddSC_instance_mechanar();
+
+void AddSC_blades_edge_mountains();
+void AddSC_boss_doomlordkazzak();
+void AddSC_boss_doomwalker();
+void AddSC_hellfire_peninsula();
+void AddSC_nagrand();
+void AddSC_netherstorm();
+void AddSC_shadowmoon_valley();
+void AddSC_shattrath_city();
+void AddSC_terokkar_forest();
+void AddSC_zangarmarsh();
+void AddSC_wintergrasp();
+
+// battlegrounds
+
+// outdoor pvp
+void AddSC_outdoorpvp_ep();
+void AddSC_outdoorpvp_hp();
+void AddSC_outdoorpvp_na();
+void AddSC_outdoorpvp_si();
+void AddSC_outdoorpvp_tf();
+void AddSC_outdoorpvp_zm();
+void AddSC_outdoorpvp_wg();
+
+// player
+void AddSC_chat_log();
+
+#endif
+
+void AddScripts()
+{
+    AddExampleScripts();
+    AddSpellScripts();
+#ifdef SCRIPTS
+    AddWorldScripts();
+    AddEasternKingdomsScripts();
+    AddKalimdorScripts();
+    AddOutlandScripts();
+    AddNorthrendScripts();
+    AddBattlegroundScripts();
+    AddOutdoorPvPScripts();
+    AddCustomScripts();
+	//guildhouse
+	AddSC_guildmaster();
+#endif
+}
+
+void AddExampleScripts()
+{
+    AddSC_example_creature();
+    AddSC_example_escort();
+    AddSC_example_gossip_codebox();
+    AddSC_example_misc();
+}
+
+void AddSpellScripts()
+{
+    AddSC_deathknight_spell_scripts();
+    AddSC_druid_spell_scripts();
+    AddSC_generic_spell_scripts();
+    AddSC_hunter_spell_scripts();
+    AddSC_mage_spell_scripts();
+    AddSC_paladin_spell_scripts();
+    AddSC_priest_spell_scripts();
+    AddSC_rogue_spell_scripts();
+    AddSC_shaman_spell_scripts();
+    AddSC_warlock_spell_scripts();
+    AddSC_warrior_spell_scripts();
+    AddSC_quest_spell_scripts();
+    AddSC_item_spell_scripts();
+    AddSC_example_spell_scripts();
+}
+
+void AddWorldScripts()
+{
+#ifdef SCRIPTS
+	AddSC_npc_mount();
+    AddSC_areatrigger_scripts();
+    AddSC_boss_emeriss();
+    AddSC_boss_taerar();
+    AddSC_boss_ysondre();
+    AddSC_generic_creature();
+    AddSC_go_scripts();
+    AddSC_guards();
+    AddSC_item_scripts();
+    AddSC_npc_professions();
+    AddSC_npc_innkeeper();
+    AddSC_npcs_special();
+    AddSC_npc_taxi();
+    AddSC_achievement_scripts();
+    AddSC_chat_log();
+	AddSC_npc_customize();
+#endif
+}
+
+void AddEasternKingdomsScripts()
+{
+#ifdef SCRIPTS
+    AddSC_alterac_valley();                 //Alterac Valley
+    AddSC_boss_balinda();
+    AddSC_boss_drekthar();
+    AddSC_boss_galvangar();
+    AddSC_boss_vanndar();
+    AddSC_blackrock_depths();               //Blackrock Depths
+    AddSC_boss_ambassador_flamelash();
+    AddSC_boss_anubshiah();
+    AddSC_boss_draganthaurissan();
+    AddSC_boss_general_angerforge();
+    AddSC_boss_gorosh_the_dervish();
+    AddSC_boss_grizzle();
+    AddSC_boss_high_interrogator_gerstahn();
+    AddSC_boss_magmus();
+    AddSC_boss_moira_bronzebeard();
+    AddSC_boss_tomb_of_seven();
+    AddSC_instance_blackrock_depths();
+    AddSC_boss_drakkisath();                //Blackrock Spire
+    AddSC_boss_halycon();
+    AddSC_boss_highlordomokk();
+    AddSC_boss_mothersmolderweb();
+    AddSC_boss_overlordwyrmthalak();
+    AddSC_boss_shadowvosh();
+    AddSC_boss_thebeast();
+    AddSC_boss_warmastervoone();
+    AddSC_boss_quatermasterzigris();
+    AddSC_boss_pyroguard_emberseer();
+    AddSC_boss_gyth();
+    AddSC_boss_rend_blackhand();
+    AddSC_boss_razorgore();                 //Blackwing lair
+    AddSC_boss_vael();
+    AddSC_boss_broodlord();
+    AddSC_boss_firemaw();
+    AddSC_boss_ebonroc();
+    AddSC_boss_flamegor();
+    AddSC_boss_chromaggus();
+    AddSC_boss_nefarian();
+    AddSC_boss_victor_nefarius();
+    AddSC_boss_mr_smite();
+    AddSC_deadmines();                      //Deadmines
+    AddSC_instance_deadmines();
+    AddSC_gnomeregan();                     //Gnomeregan
+    AddSC_instance_gnomeregan();
+    AddSC_boss_attumen();                   //Karazhan
+    AddSC_boss_curator();
+    AddSC_boss_maiden_of_virtue();
+    AddSC_boss_shade_of_aran();
+    AddSC_boss_malchezaar();
+    AddSC_boss_terestian_illhoof();
+    AddSC_boss_moroes();
+    AddSC_bosses_opera();
+    AddSC_boss_netherspite();
+    AddSC_instance_karazhan();
+    AddSC_karazhan();
+    AddSC_boss_nightbane();
+    AddSC_boss_felblood_kaelthas();         // Magister's Terrace
+    AddSC_boss_selin_fireheart();
+    AddSC_boss_vexallus();
+    AddSC_boss_priestess_delrissa();
+    AddSC_instance_magisters_terrace();
+    AddSC_magisters_terrace();
+    AddSC_boss_lucifron();                  //Molten core
+    AddSC_boss_magmadar();
+    AddSC_boss_gehennas();
+    AddSC_boss_garr();
+    AddSC_boss_baron_geddon();
+    AddSC_boss_shazzrah();
+    AddSC_boss_golemagg();
+    AddSC_boss_sulfuron();
+    AddSC_boss_majordomo();
+    AddSC_boss_ragnaros();
+    AddSC_instance_molten_core();
+    AddSC_molten_core();
+    AddSC_the_scarlet_enclave();            //Scarlet Enclave
+    AddSC_the_scarlet_enclave_c1();
+    AddSC_the_scarlet_enclave_c2();
+    AddSC_the_scarlet_enclave_c5();
+    AddSC_boss_arcanist_doan();             //Scarlet Monastery
+    AddSC_boss_azshir_the_sleepless();
+    AddSC_boss_bloodmage_thalnos();
+    AddSC_boss_headless_horseman();
+    AddSC_boss_herod();
+    AddSC_boss_high_inquisitor_fairbanks();
+    AddSC_boss_houndmaster_loksey();
+    AddSC_boss_interrogator_vishas();
+    AddSC_boss_scorn();
+    AddSC_instance_scarlet_monastery();
+    AddSC_boss_mograine_and_whitemane();
+    AddSC_boss_darkmaster_gandling();       //Scholomance
+    AddSC_boss_death_knight_darkreaver();
+    AddSC_boss_theolenkrastinov();
+    AddSC_boss_illuciabarov();
+    AddSC_boss_instructormalicia();
+    AddSC_boss_jandicebarov();
+    AddSC_boss_kormok();
+    AddSC_boss_lordalexeibarov();
+    AddSC_boss_lorekeeperpolkelt();
+    AddSC_boss_rasfrost();
+    AddSC_boss_theravenian();
+    AddSC_boss_vectus();
+    AddSC_instance_scholomance();
+    AddSC_shadowfang_keep();                //Shadowfang keep
+    AddSC_instance_shadowfang_keep();
+    AddSC_boss_magistrate_barthilas();      //Stratholme
+    AddSC_boss_maleki_the_pallid();
+    AddSC_boss_nerubenkan();
+    AddSC_boss_cannon_master_willey();
+    AddSC_boss_baroness_anastari();
+    AddSC_boss_ramstein_the_gorger();
+    AddSC_boss_timmy_the_cruel();
+    AddSC_boss_postmaster_malown();
+    AddSC_boss_baron_rivendare();
+    AddSC_boss_dathrohan_balnazzar();
+    AddSC_boss_order_of_silver_hand();
+    AddSC_instance_stratholme();
+    AddSC_stratholme();
+    AddSC_sunken_temple();                  // Sunken Temple
+    AddSC_instance_sunken_temple();
+    AddSC_instance_sunwell_plateau();       //Sunwell Plateau
+    AddSC_boss_kalecgos();
+    AddSC_boss_brutallus();
+    AddSC_boss_felmyst();
+    AddSC_boss_eredar_twins();
+    AddSC_boss_muru();
+    AddSC_boss_kiljaeden();
+    AddSC_sunwell_plateau();
+    AddSC_boss_archaedas();                 //Uldaman
+    AddSC_boss_ironaya();
+    AddSC_uldaman();
+    AddSC_instance_uldaman();
+    AddSC_boss_akilzon();                   //Zul'Aman
+    AddSC_boss_halazzi();
+    AddSC_boss_hex_lord_malacrass();
+    AddSC_boss_janalai();
+    AddSC_boss_nalorakk();
+    AddSC_boss_zuljin();
+    AddSC_instance_zulaman();
+    AddSC_zulaman();
+    AddSC_boss_jeklik();                    //Zul'Gurub
+    AddSC_boss_venoxis();
+    AddSC_boss_marli();
+    AddSC_boss_mandokir();
+    AddSC_boss_gahzranka();
+    AddSC_boss_thekal();
+    AddSC_boss_arlokk();
+    AddSC_boss_jindo();
+    AddSC_boss_hakkar();
+    AddSC_boss_grilek();
+    AddSC_boss_hazzarah();
+    AddSC_boss_renataki();
+    AddSC_boss_wushoolay();
+    AddSC_instance_zulgurub();
+
+    //AddSC_alterac_mountains();
+    AddSC_arathi_highlands();
+    AddSC_blasted_lands();
+    AddSC_boss_kruul();
+    AddSC_burning_steppes();
+    AddSC_dun_morogh();
+    AddSC_duskwood();
+    AddSC_eastern_plaguelands();
+    AddSC_elwynn_forest();
+    AddSC_eversong_woods();
+    AddSC_ghostlands();
+    AddSC_hinterlands();
+    AddSC_ironforge();
+    AddSC_isle_of_queldanas();
+    AddSC_loch_modan();
+    AddSC_redridge_mountains();
+    AddSC_searing_gorge();
+    AddSC_silvermoon_city();
+    AddSC_silverpine_forest();
+    AddSC_stormwind_city();
+    AddSC_stranglethorn_vale();
+    AddSC_swamp_of_sorrows();
+    AddSC_tirisfal_glades();
+    AddSC_undercity();
+    AddSC_western_plaguelands();
+    AddSC_westfall();
+    AddSC_wetlands();
+#endif
+}
+
+void AddKalimdorScripts()
+{
+#ifdef SCRIPTS
+    AddSC_blackfathom_deeps();              //Blackfathom Depths
+    AddSC_boss_gelihast();
+    AddSC_boss_kelris();
+    AddSC_boss_aku_mai();
+    AddSC_instance_blackfathom_deeps();
+    AddSC_hyjal();                          //CoT Battle for Mt. Hyjal
+    AddSC_boss_archimonde();
+    AddSC_instance_mount_hyjal();
+    AddSC_hyjal_trash();
+    AddSC_boss_rage_winterchill();
+    AddSC_boss_anetheron();
+    AddSC_boss_kazrogal();
+    AddSC_boss_azgalor();
+    AddSC_boss_captain_skarloc();           //CoT Old Hillsbrad
+    AddSC_boss_epoch_hunter();
+    AddSC_boss_lieutenant_drake();
+    AddSC_instance_old_hillsbrad();
+    AddSC_old_hillsbrad();
+    AddSC_boss_aeonus();                    //CoT The Dark Portal
+    AddSC_boss_chrono_lord_deja();
+    AddSC_boss_temporus();
+    AddSC_dark_portal();
+    AddSC_instance_dark_portal();
+    AddSC_boss_epoch();                     //CoT Culling Of Stratholme
+    AddSC_boss_infinite_corruptor();
+    AddSC_boss_salramm();
+    AddSC_boss_mal_ganis();
+    AddSC_boss_meathook();
+    AddSC_culling_of_stratholme();
+    AddSC_instance_culling_of_stratholme();
+    AddSC_boss_celebras_the_cursed();       //Maraudon
+    AddSC_boss_landslide();
+    AddSC_boss_noxxion();
+    AddSC_boss_ptheradras();
+    AddSC_boss_onyxia();                    //Onyxia's Lair
+    AddSC_instance_onyxias_lair();
+    AddSC_boss_amnennar_the_coldbringer();  //Razorfen Downs
+    AddSC_razorfen_downs();
+    AddSC_instance_razorfen_downs();
+    AddSC_razorfen_kraul();                 //Razorfen Kraul
+    AddSC_boss_kurinnaxx();                 //Ruins of ahn'qiraj
+    AddSC_boss_rajaxx();
+    AddSC_boss_moam();
+    AddSC_boss_buru();
+    AddSC_boss_ayamiss();
+    AddSC_boss_ossirian();
+    AddSC_instance_ruins_of_ahnqiraj();
+    AddSC_boss_cthun();                     //Temple of ahn'qiraj
+    AddSC_boss_fankriss();
+    AddSC_boss_huhuran();
+    AddSC_bug_trio();
+    AddSC_boss_sartura();
+    AddSC_boss_skeram();
+    AddSC_boss_twinemperors();
+    AddSC_mob_anubisath_sentinel();
+    AddSC_instance_temple_of_ahnqiraj();
+    AddSC_wailing_caverns();                //Wailing caverns
+    AddSC_instance_wailing_caverns();
+    AddSC_zulfarrak();                      //Zul'Farrak generic
+    AddSC_instance_zulfarrak();             //Zul'Farrak instance script
+
+    AddSC_ashenvale();
+    AddSC_azshara();
+    AddSC_azuremyst_isle();
+    AddSC_bloodmyst_isle();
+    AddSC_boss_azuregos();
+    AddSC_darkshore();
+    AddSC_desolace();
+    AddSC_durotar();
+    AddSC_dustwallow_marsh();
+    AddSC_felwood();
+    AddSC_feralas();
+    AddSC_moonglade();
+    AddSC_mulgore();
+    AddSC_orgrimmar();
+    AddSC_silithus();
+    AddSC_stonetalon_mountains();
+    AddSC_tanaris();
+    AddSC_teldrassil();
+    AddSC_the_barrens();
+    AddSC_thousand_needles();
+    AddSC_thunder_bluff();
+    AddSC_ungoro_crater();
+    AddSC_winterspring();
+#endif
+}
+
+void AddOutlandScripts()
+{
+#ifdef SCRIPTS
+    AddSC_boss_exarch_maladaar();           //Auchindoun Auchenai Crypts
+    AddSC_boss_shirrak_the_dead_watcher();
+    AddSC_boss_nexusprince_shaffar();       //Auchindoun Mana Tombs
+    AddSC_boss_pandemonius();
+    AddSC_boss_darkweaver_syth();           //Auchindoun Sekketh Halls
+    AddSC_boss_talon_king_ikiss();
+    AddSC_instance_sethekk_halls();
+    AddSC_instance_shadow_labyrinth();      //Auchindoun Shadow Labyrinth
+    AddSC_boss_ambassador_hellmaw();
+    AddSC_boss_blackheart_the_inciter();
+    AddSC_boss_grandmaster_vorpil();
+    AddSC_boss_murmur();
+    AddSC_black_temple();                   //Black Temple
+    AddSC_boss_illidan();
+    AddSC_boss_shade_of_akama();
+    AddSC_boss_supremus();
+    AddSC_boss_gurtogg_bloodboil();
+    AddSC_boss_mother_shahraz();
+    AddSC_boss_reliquary_of_souls();
+    AddSC_boss_teron_gorefiend();
+    AddSC_boss_najentus();
+    AddSC_boss_illidari_council();
+    AddSC_instance_black_temple();
+    AddSC_boss_fathomlord_karathress();     //CR Serpent Shrine Cavern
+    AddSC_boss_hydross_the_unstable();
+    AddSC_boss_lady_vashj();
+    AddSC_boss_leotheras_the_blind();
+    AddSC_boss_morogrim_tidewalker();
+    AddSC_instance_serpentshrine_cavern();
+    AddSC_boss_the_lurker_below();
+    AddSC_boss_hydromancer_thespia();       //CR Steam Vault
+    AddSC_boss_mekgineer_steamrigger();
+    AddSC_boss_warlord_kalithresh();
+    AddSC_instance_steam_vault();
+    AddSC_boss_hungarfen();                 //CR Underbog
+    AddSC_boss_the_black_stalker();
+    AddSC_boss_gruul();                     //Gruul's Lair
+    AddSC_boss_high_king_maulgar();
+    AddSC_instance_gruuls_lair();
+    AddSC_boss_broggok();                   //HC Blood Furnace
+    AddSC_boss_kelidan_the_breaker();
+    AddSC_boss_the_maker();
+    AddSC_instance_blood_furnace();
+    AddSC_boss_magtheridon();               //HC Magtheridon's Lair
+    AddSC_instance_magtheridons_lair();
+    AddSC_boss_grand_warlock_nethekurse();  //HC Shattered Halls
+    AddSC_boss_warbringer_omrogg();
+    AddSC_boss_warchief_kargath_bladefist();
+    AddSC_instance_shattered_halls();
+    AddSC_boss_watchkeeper_gargolmar();     //HC Ramparts
+    AddSC_boss_omor_the_unscarred();
+    AddSC_boss_vazruden_the_herald();
+    AddSC_instance_ramparts();
+    AddSC_arcatraz();                       //TK Arcatraz
+    AddSC_boss_harbinger_skyriss();
+    AddSC_instance_arcatraz();
+    AddSC_boss_high_botanist_freywinn();    //TK Botanica
+    AddSC_boss_laj();
+    AddSC_boss_warp_splinter();
+    AddSC_boss_alar();                      //TK The Eye
+    AddSC_boss_kaelthas();
+    AddSC_boss_void_reaver();
+    AddSC_boss_high_astromancer_solarian();
+    AddSC_instance_the_eye();
+    AddSC_the_eye();
+    AddSC_boss_gatewatcher_iron_hand();     //TK The Mechanar
+    AddSC_boss_nethermancer_sepethrea();
+    AddSC_boss_pathaleon_the_calculator();
+    AddSC_instance_mechanar();
+
+    AddSC_blades_edge_mountains();
+    AddSC_boss_doomlordkazzak();
+    AddSC_boss_doomwalker();
+    AddSC_hellfire_peninsula();
+    AddSC_nagrand();
+    AddSC_netherstorm();
+    AddSC_shadowmoon_valley();
+    AddSC_shattrath_city();
+    AddSC_terokkar_forest();
+    AddSC_zangarmarsh();
+#endif
+}
+
+void AddNorthrendScripts()
+{
+#ifdef SCRIPTS
+    AddSC_boss_slad_ran();               //Gundrak
+    AddSC_boss_moorabi();
+    AddSC_boss_drakkari_colossus();
+    AddSC_boss_gal_darah();
+    AddSC_boss_eck();
+    AddSC_instance_gundrak();
+    AddSC_boss_amanitar();
+    AddSC_boss_taldaram();              //Azjol-Nerub Ahn'kahet
+    AddSC_boss_elder_nadox();
+    AddSC_boss_jedoga_shadowseeker();
+    AddSC_boss_volazj();
+    AddSC_instance_ahnkahet();
+    AddSC_boss_argent_challenge();      //Trial of the Champion
+    AddSC_boss_black_knight();
+    AddSC_boss_grand_champions();
+    AddSC_instance_trial_of_the_champion();
+    AddSC_trial_of_the_champion();
+    AddSC_boss_anubarak_trial();        //Trial of the Crusader
+    AddSC_boss_faction_champions();
+    AddSC_boss_lord_jaraxxus();
+    AddSC_trial_of_the_crusader();
+    AddSC_boss_twins_valkyr();
+    AddSC_instance_trial_of_the_crusader();
+	AddSC_boss_beasts_of_northrend();
+    AddSC_boss_krik_thir();             //Azjol-Nerub Azjol-Nerub
+    AddSC_boss_hadronox();
+    AddSC_boss_anub_arak();
+    AddSC_instance_azjol_nerub();
+    AddSC_boss_anubrekhan();            //Naxxramas
+    AddSC_boss_maexxna();
+    AddSC_boss_patchwerk();
+    AddSC_boss_grobbulus();
+    AddSC_boss_razuvious();
+    AddSC_boss_kelthuzad();
+    AddSC_boss_loatheb();
+    AddSC_boss_noth();
+    AddSC_boss_gluth();
+    AddSC_boss_sapphiron();
+    AddSC_boss_four_horsemen();
+    AddSC_boss_faerlina();
+    AddSC_boss_heigan();
+    AddSC_boss_gothik();
+    AddSC_boss_thaddius();
+    AddSC_instance_naxxramas();
+    AddSC_boss_magus_telestra();        //The Nexus Nexus
+    AddSC_boss_anomalus();
+    AddSC_boss_ormorok();
+    AddSC_boss_keristrasza();
+    AddSC_instance_nexus();
+	AddSC_boss_malygos();            //The Nexus Eye Of Eternity
+    AddSC_instance_eye_of_eternity();
+    AddSC_npc_alexstraza();
+    AddSC_boss_drakos();                //The Nexus The Oculus
+    AddSC_boss_urom();
+    AddSC_instance_oculus();
+    AddSC_oculus();
+
+    AddSC_boss_sartharion();            //Obsidian Sanctum
+    AddSC_instance_obsidian_sanctum();
+    AddSC_boss_bjarngrim();             //Ulduar Halls of Lightning
+    AddSC_boss_loken();
+    AddSC_boss_ionar();
+    AddSC_boss_volkhan();
+    AddSC_instance_halls_of_lightning();
+    AddSC_boss_maiden_of_grief();       //Ulduar Halls of Stone
+    AddSC_boss_krystallus();
+    AddSC_boss_sjonnir();
+    AddSC_instance_halls_of_stone();
+    AddSC_halls_of_stone();
+    AddSC_boss_auriaya();               //Ulduar Ulduar
+    AddSC_boss_flame_leviathan();
+    AddSC_boss_ignis();
+    AddSC_boss_razorscale();
+    AddSC_boss_xt002();
+    AddSC_bosses_assembly_of_iron();
+    AddSC_boss_kologarn();
+    AddSC_ulduar_teleporter();
+    AddSC_instance_ulduar();
+    AddSC_boss_keleseth();              //Utgarde Keep
+    AddSC_boss_skarvald_dalronn();
+    AddSC_boss_ingvar_the_plunderer();
+    AddSC_instance_utgarde_keep();
+    AddSC_boss_svala();                 //Utgarde pinnacle
+    AddSC_boss_palehoof();
+    AddSC_boss_skadi();
+    AddSC_boss_ymiron();
+    AddSC_instance_utgarde_pinnacle();
+    AddSC_utgarde_keep();
+    AddSC_boss_archavon();              //Vault of Archavon
+    AddSC_boss_emalon();
+    AddSC_boss_koralon();
+    AddSC_boss_toravon();
+    AddSC_instance_archavon();
+    AddSC_boss_trollgore();             //Drak'Tharon Keep
+    AddSC_boss_novos();
+    AddSC_boss_dred();
+    AddSC_boss_tharon_ja();
+    AddSC_instance_drak_tharon();
+    AddSC_boss_cyanigosa();             //Violet Hold
+    AddSC_boss_erekem();
+    AddSC_boss_ichoron();
+    AddSC_boss_lavanthor();
+    AddSC_boss_moragg();
+    AddSC_boss_xevozz();
+    AddSC_boss_zuramat();
+    AddSC_instance_violet_hold();
+    AddSC_violet_hold();
+    AddSC_instance_forge_of_souls();   //Forge of Souls
+    AddSC_forge_of_souls();
+    AddSC_boss_bronjahm();
+    AddSC_boss_devourer_of_souls();
+    AddSC_instance_pit_of_saron();      //Pit of Saron
+    AddSC_pit_of_saron();
+    AddSC_boss_garfrost();
+    AddSC_boss_ick();
+    AddSC_boss_tyrannus();
+    AddSC_instance_halls_of_reflection();   // Halls of Reflection
+    AddSC_halls_of_reflection();
+    AddSC_boss_falric();
+    AddSC_boss_marwyn();
+	AddSC_boss_lich_king_hr();
+    AddSC_instance_icecrown_citadel();    // Icecrown Citadel
+    AddSC_icecrown_citadel();
+    AddSC_boss_valithria();
+    AddSC_boss_lichking();
+    AddSC_boss_sindragosa();
+    AddSC_boss_rotface();
+    AddSC_boss_rat_des_blutes();
+    AddSC_boss_professor_putricide();
+    AddSC_boss_lord_marrowgar();
+    AddSC_boss_lady_deathwhisper();
+    AddSC_boss_festergut();
+    AddSC_boss_deathbringer_saurfang();
+    AddSC_boss_blood_queen_lanathel();
+    AddSC_icecrown_citadel_teleport();
+	AddSC_boss_gunship_battle();
+	AddSC_boss_baltharus();	//RubySanctum
+    AddSC_boss_halion();
+    AddSC_boss_ragefire();
+    AddSC_boss_zarithrian();
+    AddSC_instance_ruby_sanctum();
+
+    AddSC_dalaran();
+    AddSC_borean_tundra();
+    AddSC_dragonblight();
+    AddSC_grizzly_hills();
+    AddSC_howling_fjord();
+    AddSC_icecrown();
+    AddSC_sholazar_basin();
+    AddSC_storm_peaks();
+    AddSC_zuldrak();
+    AddSC_crystalsong_forest();
+    AddSC_wintergrasp();
+#endif
+}
+
+void AddOutdoorPvPScripts()
+{
+#ifdef SCRIPTS
+    AddSC_outdoorpvp_ep();
+    AddSC_outdoorpvp_hp();
+    AddSC_outdoorpvp_na();
+    AddSC_outdoorpvp_si();
+    AddSC_outdoorpvp_tf();
+    AddSC_outdoorpvp_zm();
+    AddSC_outdoorpvp_wg();
+#endif
+}
+
+void AddBattlegroundScripts()
+{
+#ifdef SCRIPTS
+#endif
+}
+
+#ifdef SCRIPTS
+/* This is where custom scripts' loading functions should be declared. */
+
+#endif
+
+void AddCustomScripts()
+{
+#ifdef SCRIPTS
+    /* This is where custom scripts should be added. */
+    //TeleNPC2
+    AddSC_npc_teleport();
+#endif
+}
diff --git a/src/server/scripts/Northrend/Ulduar/ulduar/boss_flame_leviathan.cpp b/src/server/scripts/Northrend/Ulduar/ulduar/boss_flame_leviathan.cpp
--- a/src/server/scripts/Northrend/Ulduar/ulduar/boss_flame_leviathan.cpp
+++ b/src/server/scripts/Northrend/Ulduar/ulduar/boss_flame_leviathan.cpp
@@ -1,28 +1,29 @@
 /*
- * Copyright (C) 2008 - 2010 Trinity <http://www.trinitycore.org/>
- * Copyright (C) 2010 BloodyCore <http://code.google.com/p/bloodycore/>
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
+ * Copyright (C) 2008-2010 TrinityCore <http://www.trinitycore.org/>
  *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
+ * This program is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by the
+ * Free Software Foundation; either version 2 of the License, or (at your
+ * option) any later version.
  *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program. If not, see <http://www.gnu.org/licenses/>.
  */
- 
-/* ScriptData
-SDName: Flame Leviathan
-SDAuthor: PrinceCreed
-SD%Complete: 65
-EndScriptData */
+
+/*
+ * Comment: there is missing code on triggers,
+ *          brann bronzebeard needs correct gossip info.
+ *          requires more work involving area triggers.
+ *          if reached brann speaks through his radio..
+ */
 
 #include "ScriptPCH.h"
+#include "ScriptedEscortAI.h"
 #include "ulduar.h"
 #include "Vehicle.h"
 
@@ -34,32 +35,60 @@
     SPELL_FLAME_VENTS                           = 62396,
     SPELL_MISSILE_BARRAGE                       = 62400,
     SPELL_SYSTEMS_SHUTDOWN                      = 62475,
-
-    SPELL_FLAME_CANNON                          = 62395,
-    //SPELL_FLAME_CANNON                        = 64692 trigger the same spell
-    SPELL_AUTO_REPAIR                           = 62705,
-
     SPELL_OVERLOAD_CIRCUIT                      = 62399,
+    SPELL_START_THE_ENGINE                      = 62472,
     SPELL_SEARING_FLAME                         = 62402,
     SPELL_BLAZE                                 = 62292,
     SPELL_SMOKE_TRAIL                           = 63575,
     SPELL_ELECTROSHOCK                          = 62522,
-    SPELL_STUN                                  = 9032,
-    
-    // Ulduar Colossus spell
-    SPELL_GROUND_SLAM                           = 62625,
+    SPELL_NAPALM                                = 63666,
+    //TOWER Additional SPELLS
+    SPELL_THORIM_S_HAMMER                       = 62911, // Tower of Storms
+    SPELL_MIMIRON_S_INFERNO                     = 62909, // Tower of Flames
+    SPELL_HODIR_S_FURY                          = 62533, // Tower of Frost
+    SPELL_FREYA_S_WARD                          = 62906, // Tower of Nature
+    SPELL_FREYA_SUMMONS                         = 62947, // Tower of Nature
+    //TOWER ap & health spells
+    SPELL_BUFF_TOWER_OF_STORMS                  = 65076,
+    SPELL_BUFF_TOWER_OF_FLAMES                  = 65075,
+    SPELL_BUFF_TOWER_OF_FR0ST                   = 65077,
+    SPELL_BUFF_TOWER_OF_LIFE                    = 64482,
+    //Additional Spells
+    SPELL_LASH                                  = 65062,
+    SPELL_FREYA_S_WARD_EFFECT_1                 = 62947,
+    SPELL_FREYA_S_WARD_EFFECT_2                 = 62907,
+    SPELL_AUTO_REPAIR                           = 62705,
+    AURA_DUMMY_BLUE                             = 63294,
+    AURA_DUMMY_GREEN                            = 63295,
+    AURA_DUMMY_YELLOW                           = 63292,
+    SPELL_LIQUID_PYRITE                         = 62494,
 };
 
-enum Mobs
+enum Creatures
 {
     MOB_MECHANOLIFT                             = 33214,
     MOB_LIQUID                                  = 33189,
     MOB_CONTAINER                               = 33218,
-    MOB_COLOSSUS                                = 33237
+    MOB_THORIM_BEACON                           = 33365,
+    MOB_MIMIRON_BEACON                          = 33370,
+    MOB_HODIR_BEACON                            = 33212,
+    MOB_FREYA_BEACON                            = 33367,
+    NPC_THORIM_TARGET_BEACON                    = 33364,
+    NPC_MIMIRON_TARGET_BEACON                   = 33369,
+    NPC_HODIR_TARGET_BEACON                     = 33108,
+    NPC_FREYA_TARGET_BEACON                     = 33366,
+    NPC_LOREKEEPER                              = 33686, //Hard mode starter
+    NPC_BRANZ_BRONZBEARD                        = 33579,
+    NPC_DELORAH                                 = 33701,
 };
 
-#define ACTION_VEHICLE_RESPAWN                    1
-#define INCREASE_COLOSSUS_COUNT                   2
+enum Towers
+{
+    GO_TOWER_OF_STORMS = 194377,
+    GO_TOWER_OF_FLAMES = 194371,
+    GO_TOWER_OF_FROST = 194370,
+    GO_TOWER_OF_LIFE = 194375,
+};
 
 enum Events
 {
@@ -69,7 +98,12 @@
     EVENT_VENT,
     EVENT_SPEED,
     EVENT_SUMMON,
-    EVENT_SHUTDOWN, // not offylike
+    EVENT_SHUTDOWN,
+    EVENT_REPAIR,
+    EVENT_THORIM_S_HAMMER, // Tower of Storms
+    EVENT_MIMIRON_S_INFERNO, // Tower of Flames
+    EVENT_HODIR_S_FURY,      // Tower of Frost
+    EVENT_FREYA_S_WARD,     // Tower of Nature
 };
 
 enum Seats
@@ -77,12 +111,19 @@
     SEAT_PLAYER                                 = 0,
     SEAT_TURRET                                 = 1,
     SEAT_DEVICE                                 = 2,
+    SEAT_CANNON                                 = 7,
+};
+
+enum Vehicles
+{
+    VEHICLE_SIEGE                             = 33060,
+    VEHICLE_CHOPPER                           = 33062,
+    VEHICLE_DEMOLISHER                        = 33109,
 };
 
 #define EMOTE_PURSUE          "Flame Leviathan pursues $N."
 #define EMOTE_OVERLOAD        "Flame Leviathan's circuits overloaded."
 #define EMOTE_REPAIR          "Automatic repair sequence initiated."
-#define GOSSIP_ITEM_1         "Summon vehicles!"
 
 enum Yells
 {
@@ -104,118 +145,534 @@
     SAY_OVERLOAD_3                              = -1603075,
 };
 
-#define VEHICLE_SIEGE                              33060
-#define VEHICLE_CHOPPER                            33062
-#define VEHICLE_DEMOLISHER                         33109
+enum eAchievementData
+{
+    ACHIEV_10_NUKED_FROM_ORBIT                  = 2915,
+    ACHIEV_25_NUKED_FROM_ORBIT                  = 2917,
+    ACHIEV_10_ORBITAL_BOMBARDMENT               = 2913,
+    ACHIEV_25_ORBITAL_BOMBARDMENT               = 2918,
+    ACHIEV_10_ORBITAL_DEVASTATION               = 2914,
+    ACHIEV_25_ORBITAL_DEVASTATION               = 2916,
+    ACHIEV_10_ORBIT_UARY                        = 3056,
+    ACHIEV_25_ORBIT_UARY                        = 3057,
+    ACHIEV_10_SHUTOUT                           = 2911,
+    ACHIEV_25_SHUTOUT                           = 2912,
+    ACHIEV_10_SIEGE_OF_ULDUAR                   = 2886,
+    ACHIEV_25_SIEGE_OF_ULDUAR                   = 2887,
+    ACHIEV_10_THREE_CAR_GARAGE                  = 2907, //no core support for using a vehicle
+    ACHIEV_25_THREE_CAR_GARAGE                  = 2908, //no core support for using a vehicle
+    ACHIEV_10_UNBROKEN                          = 2905,
+    ACHIEV_25_UNBROKEN                          = 2906,
+};
+
+static Position Center[]=
+{
+    {354.8771f, -12.90240f, 409.803650f, 0.0f},
+};
 
 const Position PosSiege[5] =
 {
-{-814.59f, -64.54f, 429.92f, 5.969f},
-{-784.37f, -33.31f, 429.92f, 5.096f},
-{-808.99f, -52.10f, 429.92f, 5.668f},
-{-798.59f, -44.00f, 429.92f, 5.663f},
-{-812.83f, -77.71f, 429.92f, 0.046f}
+    {-814.59f,-64.54f,429.92f,5.969f},
+    {-784.37f,-33.31f,429.92f,5.096f},
+    {-808.99f,-52.10f,429.92f,5.668f},
+    {-798.59f,-44.00f,429.92f,5.663f},
+    {-812.83f,-77.71f,429.92f,0.046f},
 };
 
 const Position PosChopper[5] =
 {
-{-717.83f, -106.56f, 430.02f, 0.122f},
-{-717.83f, -114.23f, 430.44f, 0.122f},
-{-717.83f, -109.70f, 430.22f, 0.122f},
-{-718.45f, -118.24f, 430.26f, 0.052f},
-{-718.45f, -123.58f, 430.41f, 0.085f}
+    {-717.83f,-106.56f,430.02f,0.122f},
+    {-717.83f,-114.23f,430.44f,0.122f},
+    {-717.83f,-109.70f,430.22f,0.122f},
+    {-718.45f,-118.24f,430.26f,0.052f},
+    {-718.45f,-123.58f,430.41f,0.085f},
 };
 
 const Position PosDemolisher[5] =
 {
-{-724.12f, -176.64f, 430.03f, 2.543f},
-{-766.70f, -225.03f, 430.50f, 1.710f},
-{-729.54f, -186.26f, 430.12f, 1.902f},
-{-756.01f, -219.23f, 430.50f, 2.369f},
-{-798.01f, -227.24f, 429.84f, 1.446f}
-};
-
-const Position PosColossus[2] =
-{
-{368.768f, 12.784f, 409.886f, 3.263f},
-{368.768f, -46.847f, 409.886f, 3.036f}
+    {-724.12f,-176.64f,430.03f,2.543f},
+    {-766.70f,-225.03f,430.50f,1.710f},
+    {-729.54f,-186.26f,430.12f,1.902f},
+    {-756.01f,-219.23f,430.50f,2.369f},
+    {-798.01f,-227.24f,429.84f,1.446f},
 };
 
 class boss_flame_leviathan : public CreatureScript
 {
 public:
-    boss_flame_leviathan() : CreatureScript("boss_flame_leviathan") {}
+    boss_flame_leviathan() : CreatureScript("boss_flame_leviathan") { }
 
     CreatureAI* GetAI(Creature* pCreature) const
     {
-        return new boss_flame_leviathanAI(pCreature);
+        return new boss_flame_leviathanAI (pCreature);
     }
 
     struct boss_flame_leviathanAI : public BossAI
     {
-        boss_flame_leviathanAI(Creature *pCreature) : BossAI(pCreature, BOSS_LEVIATHAN), vehicle(me->GetVehicleKit())
+        boss_flame_leviathanAI(Creature* pCreature) : BossAI(pCreature, TYPE_LEVIATHAN), vehicle(pCreature->GetVehicleKit())
         {
             assert(vehicle);
-            pInstance = pCreature->GetInstanceScript();
-            ColossusCount = 0;
+            uiActiveTowers = 4;
+            uiShutdown = 0;
+            ActiveTowers = false;
+            towerOfStorms = false;
+            towerOfLife = false;
+            towerOfFlames = false;
+            towerOfFrost = false;
+
             me->ApplySpellImmune(0, IMMUNITY_EFFECT, SPELL_EFFECT_KNOCK_BACK, true);
-            me->ApplySpellImmune(0, IMMUNITY_ID, 49560, true);  // Death Grip
-            
+            me->ApplySpellImmune(0, IMMUNITY_ID, 49560, true); //deathgrip
             me->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE | UNIT_FLAG_NOT_SELECTABLE | UNIT_FLAG_STUNNED);
             me->SetReactState(REACT_PASSIVE);
-            
-            // Summon Ulduar Colossus
-            if (me->isAlive())
-                for(uint32 i = 0; i < 2; ++i)
-                    DoSummon(MOB_COLOSSUS, PosColossus[i], 7000, TEMPSUMMON_CORPSE_TIMED_DESPAWN);
-            }
+        }
 
-        InstanceScript* pInstance;
-        
-        Vehicle *vehicle;
-        uint32 ColossusCount;
+        Vehicle* vehicle;
+        uint8 uiActiveTowers;
+        uint8 uiShutdown;
+        bool ActiveTowers;
+        bool towerOfStorms;
+        bool towerOfLife;
+        bool towerOfFlames;
+        bool towerOfFrost;
 
         void Reset()
         {
             _Reset();
+            me->SetReactState(REACT_DEFENSIVE);
+            InstallAdds(true);
         }
 
-        void EnterCombat(Unit *who)
+        void EnterCombat(Unit* /*who*/)
         {
             _EnterCombat();
-            pInstance->SetData(TYPE_LEVIATHAN, IN_PROGRESS);
-            events.ScheduleEvent(EVENT_PURSUE, 0);
+            me->SetReactState(REACT_AGGRESSIVE);
+            events.ScheduleEvent(EVENT_PURSUE, 30*IN_MILLISECONDS);
             events.ScheduleEvent(EVENT_MISSILE, 1500);
-            events.ScheduleEvent(EVENT_VENT, 20000);
-            events.ScheduleEvent(EVENT_SPEED, 2000);
-            //events.ScheduleEvent(EVENT_SUMMON, 0);
-            events.ScheduleEvent(EVENT_SHUTDOWN, 90000);
-            if (Creature *turret = CAST_CRE(vehicle->GetPassenger(7)))
-                turret->AI()->DoZoneInCombat();
+            events.ScheduleEvent(EVENT_VENT, 20*IN_MILLISECONDS);
+            events.ScheduleEvent(EVENT_SPEED, 15*IN_MILLISECONDS);
+            events.ScheduleEvent(EVENT_SUMMON, 1*IN_MILLISECONDS);
+            ActiveTower(false); //void ActiveTower
+            InstallAdds(false);
         }
 
-        void JustDied(Unit *victim)
+        void ActiveTower(bool bReset = false)
         {
-            DoScriptText(SAY_DEATH, me);
-            _JustDied();
-            
-            DespawnCreatures(VEHICLE_SIEGE, 200);
-            DespawnCreatures(VEHICLE_DEMOLISHER, 200);
-            DespawnCreatures(VEHICLE_CHOPPER, 200);
+            if (!bReset)
+            {
+                if (ActiveTowers)
+                {
+                    if (towerOfStorms)
+                    {
+                        me->AddAura(SPELL_BUFF_TOWER_OF_STORMS, me);
+                        events.ScheduleEvent(EVENT_THORIM_S_HAMMER, 35*IN_MILLISECONDS);
+                    }
+
+                    if (towerOfFlames)
+                    {
+                        me->AddAura(SPELL_BUFF_TOWER_OF_FLAMES, me);
+                        events.ScheduleEvent(EVENT_MIMIRON_S_INFERNO,70*IN_MILLISECONDS);
+                    }
+
+                    if (towerOfFrost)
+                    {
+                        me->AddAura(SPELL_BUFF_TOWER_OF_FR0ST, me);
+                        events.ScheduleEvent(EVENT_HODIR_S_FURY, 105*IN_MILLISECONDS);
+                    }
+
+                    if (towerOfLife)
+                    {
+                        me->AddAura(SPELL_BUFF_TOWER_OF_LIFE, me);
+                        events.ScheduleEvent(EVENT_FREYA_S_WARD, 140*IN_MILLISECONDS);
+                    }
+
+                    if (!towerOfLife && !towerOfFrost && !towerOfFlames && !towerOfStorms)
+                        DoScriptText(SAY_TOWER_NONE, me);
+                    else
+                        DoScriptText(SAY_HARDMODE, me);
+                }
+                else
+                    DoScriptText(SAY_AGGRO, me);
+            }
         }
 
-        void SpellHit(Unit *caster, const SpellEntry *spell)
+        void InstallAdds(bool bReset = false)
         {
-            if(spell->Id == 62472)
-                vehicle->InstallAllAccessories(me->GetEntry());
-            else if(spell->Id == SPELL_ELECTROSHOCK)
-                me->InterruptSpell(CURRENT_CHANNELED_SPELL);
+            if (!bReset)
+            {
+                std::list<Creature*> lSeats;
+                me->GetCreatureListWithEntryInGrid(lSeats, 33114,17.0f);
+                if (lSeats.empty())
+                    return;
+                for(std::list<Creature*>::const_iterator itr = lSeats.begin(); itr != lSeats.end(); itr++)
+                {
+                    Vehicle* pSeat = (*itr)->GetVehicleKit();
+                    if (Creature* pTurret = (me->SummonCreature(33142, me->GetPositionX(), me->GetPositionY(), me->GetPositionZ(), 0, TEMPSUMMON_MANUAL_DESPAWN)))
+                        pTurret->EnterVehicle(pSeat, SEAT_TURRET);
+
+                    if (Creature* pDevice = (me->SummonCreature(33143, me->GetPositionX(), me->GetPositionY(), me->GetPositionZ(), 0, TEMPSUMMON_MANUAL_DESPAWN)))
+                        pDevice->EnterVehicle(pSeat, SEAT_DEVICE);
+                }
+            }
+            else
+            {
+                std::list<Creature*> lSeats;
+                me->GetCreatureListWithEntryInGrid(lSeats, 33114,17.0f);
+                if (lSeats.empty())
+                    return;
+                for(std::list<Creature*>::const_iterator itr = lSeats.begin(); itr != lSeats.end(); itr++)
+                {
+                    Vehicle* pSeat = (*itr)->GetVehicleKit();
+                    if (Unit* pTurret = (pSeat->GetPassenger(SEAT_TURRET)))
+                        pTurret->RemoveFromWorld();
+
+                    if (Unit* pDevice = (pSeat->GetPassenger(SEAT_DEVICE)))
+                        pDevice->RemoveFromWorld();
+
+                }
+            }
         }
 
-        void KilledUnit(Unit* Victim)
+        // TODO: effect 0 and effect 1 may be on different target
+        void SpellHitTarget(Unit* pTarget, const SpellEntry* pSpell)
         {
-            if (!(rand()%5))
-                DoScriptText(SAY_SLAY, me);
+            if (pSpell->Id == SPELL_PURSUED)
+                AttackStart(pTarget);
+        }
+
+
+        void JustDied(Unit* /*victim*/)
+        {
+            _JustDied();
+            DoScriptText(SAY_DEATH, me);
+
+            if (ActiveTowers)
+            {
+                switch (uiActiveTowers)
+                {
+                case 4:
+                    instance->DoCompleteAchievement(RAID_MODE(ACHIEV_10_ORBIT_UARY, ACHIEV_25_ORBIT_UARY));
+                case 3:
+                    instance->DoCompleteAchievement(RAID_MODE(ACHIEV_10_NUKED_FROM_ORBIT, ACHIEV_25_NUKED_FROM_ORBIT));
+                case 2:
+                    instance->DoCompleteAchievement(RAID_MODE(ACHIEV_10_ORBITAL_DEVASTATION, ACHIEV_25_ORBITAL_DEVASTATION));
+                case 1:
+                    instance->DoCompleteAchievement(RAID_MODE(ACHIEV_10_ORBITAL_BOMBARDMENT, ACHIEV_25_ORBITAL_BOMBARDMENT));
+                }
+            }
+        }
+
+        void SpellHit(Unit* /*caster*/, const SpellEntry* pSpell)
+        {
+            if (pSpell->Id == SPELL_START_THE_ENGINE)
+                vehicle->InstallAllAccessories(me->GetEntry());
+
+            if (pSpell->Id == SPELL_ELECTROSHOCK)
+                me->InterruptSpell(CURRENT_CHANNELED_SPELL);
+
+            if (pSpell->Id == SPELL_OVERLOAD_CIRCUIT)
+                uiShutdown++;
+        }
+
+        void UpdateAI(const uint32 diff)
+        {
+            if (!me->isInCombat())
+                return;
+
+            if (me->getThreatManager().isThreatListEmpty())
+            {
+                EnterEvadeMode();
+                return;
+            }
+
+            if (uiShutdown == RAID_MODE(2,4))
+            {
+                uiShutdown = 0;
+                events.ScheduleEvent(EVENT_SHUTDOWN, 0);
+                events.ScheduleEvent(EVENT_REPAIR, 0);
+                me->RemoveAurasDueToSpell(SPELL_OVERLOAD_CIRCUIT);
+                me->InterruptNonMeleeSpells(true);
+                return;
+            }
+
+            if (me->HasAura(SPELL_SYSTEMS_SHUTDOWN))
+            {
+                me->SetReactState(REACT_PASSIVE);
+                me->addUnitState(UNIT_STAT_STUNNED | UNIT_STAT_ROOT);
+                return;
+            }
+
+            if (me->hasUnitState(UNIT_STAT_CASTING))
+                return;
+
+            if (me->HasAura(SPELL_SYSTEMS_SHUTDOWN))
+            {
+                me->SetReactState(REACT_PASSIVE);
+                me->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_STUNNED);
+                return;
+            }
+            else
+            {
+                me->SetReactState(REACT_AGGRESSIVE);
+                me->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_STUNNED);
+            }
+
+            events.Update(diff);
+
+            uint32 eventId = events.GetEvent();
+            if (!me->getVictim())
+                UpdateVictim();
+
+            switch(eventId)
+            {
+            case 0: break; // this is a must
+            case EVENT_PURSUE:
+                DoScriptText(RAND(SAY_TARGET_1, SAY_TARGET_2, SAY_TARGET_3), me);
+                if (Unit* pTarget = SelectTarget(SELECT_TARGET_RANDOM))
+                {
+                    if (pTarget->GetTypeId() == TYPEID_PLAYER || pTarget->HasFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_PLAYER_VEHICLE))
+                    {
+                        me->AddAura(SPELL_PURSUED, pTarget);
+                        me->MonsterTextEmote(EMOTE_PURSUE, pTarget->GetGUID(), true);
+                    }
+                }
+                events.RepeatEvent(30*IN_MILLISECONDS);
+                break;
+            case EVENT_MISSILE:
+                if (Unit* pTarget = SelectTarget(SELECT_TARGET_RANDOM))
+                    DoCast(pTarget, SPELL_MISSILE_BARRAGE);
+                events.RepeatEvent(1500);
+                break;
+            case EVENT_VENT:
+                DoCastAOE(SPELL_FLAME_VENTS);
+                events.RepeatEvent(20*IN_MILLISECONDS);
+                break;
+            case EVENT_SPEED:
+                DoCastAOE(SPELL_GATHERING_SPEED);
+                events.RepeatEvent(15*IN_MILLISECONDS);
+                break;
+            case EVENT_SUMMON:
+                if (summons.size() < 15) // 4seat+1turret+10lift
+                    if (Creature* pLift = DoSummonFlyer(MOB_MECHANOLIFT, me, 30.0f, 50.0f, 0))
+                        pLift->GetMotionMaster()->MoveRandom(100);
+                events.RepeatEvent(2*IN_MILLISECONDS);
+                break;
+            case EVENT_SHUTDOWN:
+                DoScriptText(RAND(SAY_OVERLOAD_1, SAY_OVERLOAD_2, SAY_OVERLOAD_3), me);
+                InstallAdds(true);
+                me->MonsterTextEmote(EMOTE_OVERLOAD, 0, true);
+                me->AddAura(SPELL_SYSTEMS_SHUTDOWN, me);
+                me->RemoveAurasDueToSpell(SPELL_GATHERING_SPEED);
+                events.CancelEvent(EVENT_SHUTDOWN);
+                break;
+            case EVENT_REPAIR:
+                me->MonsterTextEmote(EMOTE_REPAIR, 0, true);
+                me->clearUnitState(UNIT_STAT_STUNNED | UNIT_STAT_ROOT);
+                InstallAdds(false);
+                events.CancelEvent(EVENT_REPAIR);
+                break;
+            case EVENT_THORIM_S_HAMMER: // Tower of Storms
+                for (uint8 i = 0; i < 7; ++i)
+                {
+                    if (Creature* pThorim = DoSummon(MOB_THORIM_BEACON, me, float(urand(20,60)), 20000, TEMPSUMMON_TIMED_DESPAWN))
+                        pThorim->GetMotionMaster()->MoveRandom(100);
+                }
+                DoScriptText(SAY_TOWER_STORM, me);
+                events.CancelEvent(EVENT_THORIM_S_HAMMER);
+                break;
+            case EVENT_MIMIRON_S_INFERNO: // Tower of Flames
+                me->SummonCreature(MOB_MIMIRON_BEACON, 390.93f, -13.91f, 409.81f);
+                DoScriptText(SAY_TOWER_FLAME, me);
+                events.CancelEvent(EVENT_MIMIRON_S_INFERNO);
+                break;
+            case EVENT_HODIR_S_FURY:      // Tower of Frost
+                for (uint8 i = 0; i < 7; ++i)
+                {
+                    if (Creature* pHodir = DoSummon(MOB_HODIR_BEACON, me, 50, 0))
+                        pHodir->GetMotionMaster()->MoveRandom(100);
+                }
+                DoScriptText(SAY_TOWER_FROST, me);
+                events.CancelEvent(EVENT_HODIR_S_FURY);
+                break;
+            case EVENT_FREYA_S_WARD:    // Tower of Nature
+                DoScriptText(SAY_TOWER_NATURE, me);
+                StartFreyaEvent();
+                if (Unit* pTarget = SelectTarget(SELECT_TARGET_RANDOM))
+                    DoCast(pTarget, SPELL_FREYA_S_WARD);
+                events.CancelEvent(EVENT_FREYA_S_WARD);
+                break;
+            default:
+                events.PopEvent();
+                break;
+            }
+            /*if (me->IsWithinMeleeRange(me->getVictim())) //bugged spell casts on units that are boarded on leviathan
+            DoSpellAttackIfReady(SPELL_BATTERING_RAM);*/
+            DoMeleeAttackIfReady();
+        }
+
+        void StartFreyaEvent()//summon these 4 on each corner wich wil spawn additional hostile mobs
+        {
+            me->SummonCreature(MOB_FREYA_BEACON, 377.02f, -119.10f, 409.81f);
+            me->SummonCreature(MOB_FREYA_BEACON, 377.02f, 54.78f, 409.81f);
+            me->SummonCreature(MOB_FREYA_BEACON, 185.62f, 54.78f, 409.81f);
+            me->SummonCreature(MOB_FREYA_BEACON, 185.62f, -119.10f, 409.81f);
+        }
+
+        void DoAction(const int32 uiAction)
+        {
+            // Start encounter
+            if (uiAction == 10)
+            {
+                me->SetHomePosition(354.8771f, -12.90240f, 409.803f, 0);
+                me->GetMotionMaster()->MoveCharge(354.8771f, -12.90240f, 409.803f); //position center
+                me->SetReactState(REACT_AGGRESSIVE);
+                me->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE | UNIT_FLAG_NOT_SELECTABLE | UNIT_FLAG_STUNNED);
+                return;
+            }
+
+            if (uiAction && uiAction <= 4) // Tower destruction, debuff leviathan loot and reduce active tower
+            {
+                if (me->HasLootMode(31) && uiActiveTowers == 4)
+                {
+                    me->RemoveLootMode(LOOT_MODE_HARD_MODE_4);
+                    --uiActiveTowers;
+                }
+                if (me->HasLootMode(15) && uiActiveTowers == 3)
+                {
+                    me->RemoveLootMode(LOOT_MODE_HARD_MODE_3);
+                    --uiActiveTowers;
+                }
+                if (me->HasLootMode(7) && uiActiveTowers == 2)
+                {
+                    me->RemoveLootMode(LOOT_MODE_HARD_MODE_2);
+                    --uiActiveTowers;
+                }
+                if (me->HasLootMode(3) && uiActiveTowers == 1)
+                {
+                    me->RemoveLootMode(LOOT_MODE_HARD_MODE_1);
+                    --uiActiveTowers;
+                }
+            }
+
+            switch (uiAction)
+            {
+            case 0:  // Activate hard-mode setting counter to 4 towers, enable all towers apply buffs on levithian
+                ActiveTowers = true;
+                towerOfStorms = true;
+                towerOfLife = true;
+                towerOfFlames = true;
+                towerOfFrost = true;
+                me->SetLootMode(31);
+                break;
+            case 1:  // Tower of Storms destroyed
+                towerOfStorms = false;
+                break;
+            case 2: // Tower of Flames destroyed
+                towerOfFlames = false;
+                break;
+            case 3: // Tower of Frost destroyed
+                towerOfFrost = false;
+                break;
+            case 4: // Tower of Nature destroyed
+                towerOfLife = false;
+                break;
+            }
+        }
+    };
+
+};
+
+//#define BOSS_DEBUG
+
+class boss_flame_leviathan_seat : public CreatureScript
+{
+public:
+    boss_flame_leviathan_seat() : CreatureScript("boss_flame_leviathan_seat") { }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new boss_flame_leviathan_seatAI (pCreature);
+    }
+
+    struct boss_flame_leviathan_seatAI : public PassiveAI
+    {
+        boss_flame_leviathan_seatAI(Creature* pCreature) : PassiveAI(pCreature), vehicle(pCreature->GetVehicleKit())
+        {
+            assert(vehicle);
+    #ifdef BOSS_DEBUG
+            me->SetReactState(REACT_AGGRESSIVE);
+    #endif
+        }
+
+        Vehicle* vehicle;
+
+    #ifdef BOSS_DEBUG
+        void MoveInLineOfSight(Unit *who)
+        {
+            if (who->GetTypeId() == TYPEID_PLAYER && CAST_PLR(who)->isGameMaster()
+                && !who->GetVehicle() && vehicle->GetPassenger(SEAT_TURRET))
+                who->EnterVehicle(vehicle, SEAT_PLAYER);
+        }
+    #endif
+
+        void PassengerBoarded(Unit* who, int8 seatId, bool apply)
+        {
+            if (!me->GetVehicle())
+                return;
+
+            if (seatId == SEAT_PLAYER)
+            {
+                if (!apply)
+                    return;
+                else
+                    DoScriptText(SAY_PLAYER_RIDING,me);
+
+                if (Creature* pTurret = CAST_CRE(vehicle->GetPassenger(SEAT_TURRET)))
+                {
+                    pTurret->setFaction(me->GetVehicleBase()->getFaction());
+                    pTurret->SetUInt32Value(UNIT_FIELD_FLAGS, 0); // unselectable
+                    pTurret->AI()->AttackStart(who);
+                }
+                if (Unit* pDevice = CAST_CRE(vehicle->GetPassenger(SEAT_DEVICE)))
+                {
+                    pDevice->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_SPELLCLICK);
+                    pDevice->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+                }
+            }
+            //else //throw passenger bugged, when fixed uncomment this part.
+            //    if (seatId == SEAT_TURRET)
+            //    {
+            //        if (apply)
+            //            return;
+            //        if (Unit* device = vehicle->GetPassenger(SEAT_DEVICE))
+            //        {
+            //            device->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_SPELLCLICK);
+            //            device->SetUInt32Value(UNIT_FIELD_FLAGS, 0); // unselectable
+            //        }
+            //    }
+        }
+    };
+
+};
+
+class boss_flame_leviathan_defense_cannon : public CreatureScript
+{
+public:
+    boss_flame_leviathan_defense_cannon() : CreatureScript("boss_flame_leviathan_defense_cannon") { }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new boss_flame_leviathan_defense_cannonAI (pCreature);
+    }
+
+    struct boss_flame_leviathan_defense_cannonAI : public ScriptedAI
+    {
+        boss_flame_leviathan_defense_cannonAI(Creature* pCreature) : ScriptedAI(pCreature) { }
+
+        uint32 NapalmTimer;
+
+        void Reset ()
+        {
+            NapalmTimer = 5000;
         }
 
         void UpdateAI(const uint32 diff)
@@ -223,228 +680,17 @@
             if (!UpdateVictim())
                 return;
 
-            events.Update(diff);
-            
-            if (me->hasUnitState(UNIT_STAT_CASTING) || me->HasAura(SPELL_SYSTEMS_SHUTDOWN))
-                return;
-
-            while(uint32 eventId = events.ExecuteEvent())
+            if (NapalmTimer <= diff)
             {
-                switch(eventId)
-                {
-                case 0: break;
-                case EVENT_PURSUE:
-                    DoScriptText(RAND(SAY_TARGET_1, SAY_TARGET_2, SAY_TARGET_3), me);
+                    if (Unit* pTarget = SelectUnit(SELECT_TARGET_RANDOM,0))
                     {
-                        DoZoneInCombat();
-                        Unit* pTarget;
-                        std::vector<Unit *> target_list;
-                        std::list<HostileReference*> ThreatList = me->getThreatManager().getThreatList();
-                        for (std::list<HostileReference*>::const_iterator itr = ThreatList.begin(); itr != ThreatList.end(); ++itr)
-                        {
-                            pTarget = Unit::GetUnit(*me, (*itr)->getUnitGuid());
-                            
-                            if (!pTarget)
-                                continue;
-                                
-                            if (pTarget->GetEntry() == VEHICLE_SIEGE || pTarget->GetEntry() == VEHICLE_DEMOLISHER)
-                                target_list.push_back(pTarget);
-                                
-                            pTarget = NULL;
-                        }
-                        
-                        if (!target_list.empty())
-                            pTarget = *(target_list.begin()+rand()%target_list.size());
-                        else
-                            pTarget = me->getVictim();
-                            
-                        if (pTarget && pTarget->isAlive())
-                        {
-                            DoResetThreat();
-                            me->AddThreat(pTarget, 5000000.0f);
-                            me->AddAura(SPELL_PURSUED, pTarget);
-                            me->MonsterTextEmote(EMOTE_PURSUE, pTarget->GetGUID(), true);
-                        }
+                        if(CanAIAttack(pTarget))
+                            DoCast(pTarget,SPELL_NAPALM,true);
                     }
-                    events.RescheduleEvent(EVENT_PURSUE, 35000);
-                    break;
-                case EVENT_MISSILE:
-                    DoCastAOE(SPELL_MISSILE_BARRAGE);
-                    events.RescheduleEvent(EVENT_MISSILE, 1500);
-                    break;
-                case EVENT_VENT:
-                    DoCastAOE(SPELL_FLAME_VENTS);
-                    events.RescheduleEvent(EVENT_VENT, urand(15000, 20000));
-                    break;
-                case EVENT_SPEED:
-                    DoCastAOE(SPELL_GATHERING_SPEED);
-                    events.RescheduleEvent(EVENT_SPEED, 10000);
-                break;
-                case EVENT_SUMMON:
-                    if(summons.size() < 15) // 4seat+1turret+10lift
-                        if(Creature *lift = DoSummonFlyer(MOB_MECHANOLIFT, me, float(rand()%20 + 20), 50, 0))
-                            lift->GetMotionMaster()->MoveRandom(100);
-                    events.RescheduleEvent(EVENT_SUMMON, 2000);
-                    break;
-                case EVENT_SHUTDOWN:
-                    DoScriptText(RAND(SAY_OVERLOAD_1, SAY_OVERLOAD_2, SAY_OVERLOAD_3), me);
-                    me->MonsterTextEmote(EMOTE_OVERLOAD, 0, true);
-                    DoCast(SPELL_SYSTEMS_SHUTDOWN);
-                    me->RemoveAurasDueToSpell(SPELL_GATHERING_SPEED);
-                    me->MonsterTextEmote(EMOTE_REPAIR, 0, true);
-                    events.RescheduleEvent(EVENT_SHUTDOWN, 90000);
-                    break;
-                default:
-                    events.PopEvent();
-                    break;
-                }
+                    NapalmTimer = 5000;
             }
-            
-            if (me->IsWithinMeleeRange(me->getVictim()))
-                DoSpellAttackIfReady(SPELL_BATTERING_RAM);
-        }
-     
-        void DoAction(const int32 action)
-        {
-            switch (action)
-            {
-                case INCREASE_COLOSSUS_COUNT:
-                    ++ColossusCount;
-                    break;
-            }
-            
-            if (ColossusCount >= 2)
-            {
-                // Event starts
-                if (pInstance)
-                    pInstance->SetData(DATA_LEVIATHAN_DOOR, GO_STATE_ACTIVE_ALTERNATIVE);
-                    
-                me->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE | UNIT_FLAG_NOT_SELECTABLE | UNIT_FLAG_STUNNED);
-                me->SetReactState(REACT_AGGRESSIVE);
-                me->SetHomePosition(318.74f, -13.75f, 409.803f, 3.12723f); // new Home Position
-                me->GetMotionMaster()->MoveTargetedHome();
-                DoZoneInCombat();
-            }
-        }
-        
-        // HACK: this fixes problems in instance bind and loot.
-        void DamageTaken(Unit* pKiller, uint32 &damage)
-        {
-            if(damage >= me->GetHealth())
-            {
-                if (pKiller && pKiller->IsVehicle())
-                {
-                    damage = 0;
-                    if (!pKiller->GetVehicleKit()->HasEmptySeat(0))
-                        pKiller->GetVehicleKit()->GetPassenger(0)->Kill(me, false);
-                    else if (!pKiller->GetVehicleKit()->HasEmptySeat(1))
-                        pKiller->GetVehicleKit()->GetPassenger(1)->Kill(me, false);
-                }
-            }
-        }
-        
-        void DespawnCreatures(uint32 entry, float distance, bool discs = false)
-        {
-            std::list<Creature*> m_pCreatures;
-            GetCreatureListWithEntryInGrid(m_pCreatures, me, entry, distance);
-     
-            if (m_pCreatures.empty())
-                return;
-     
-            for(std::list<Creature*>::iterator iter = m_pCreatures.begin(); iter != m_pCreatures.end(); ++iter)
-                (*iter)->ForcedDespawn();
-        }
-    };
-};
-
-//#define BOSS_DEBUG
-
-class boss_flame_leviathan_seat : public CreatureScript
-{
-public:
-    boss_flame_leviathan_seat() : CreatureScript("boss_flame_leviathan_seat") {}
-
-    CreatureAI* GetAI(Creature* pCreature) const
-    {
-        return new boss_flame_leviathan_seatAI(pCreature);
-    }
-
-    struct boss_flame_leviathan_seatAI : public PassiveAI
-    {
-        boss_flame_leviathan_seatAI(Creature *c) : PassiveAI(c), vehicle(c->GetVehicleKit())
-        {
-            assert(vehicle);
-    #ifdef BOSS_DEBUG
-            me->SetReactState(REACT_AGGRESSIVE);
-    #endif
-        }
-
-        Vehicle *vehicle;
-
-    #ifdef BOSS_DEBUG
-        void MoveInLineOfSight(Unit *who)
-        {
-            if(who->GetTypeId() == TYPEID_PLAYER && CAST_PLR(who)->isGameMaster()
-                && !who->GetVehicle() && vehicle->GetPassenger(SEAT_TURRET))
-                who->EnterVehicle(vehicle, SEAT_PLAYER);
-        }
-    #endif
-
-        void PassengerBoarded(Unit *who, int8 seatId, bool apply)
-        {
-            if(!me->GetVehicle())
-                return;
-
-            if(seatId == SEAT_PLAYER)
-            {
-                if(!apply)
-                    return;
-
-                if(Creature *turret = CAST_CRE(vehicle->GetPassenger(SEAT_TURRET)))
-                {
-                    turret->setFaction(me->GetVehicleBase()->getFaction());
-                    turret->SetUInt32Value(UNIT_FIELD_FLAGS, 0); // unselectable
-                    turret->AI()->AttackStart(who);
-                }
-                if(Unit *device = vehicle->GetPassenger(SEAT_DEVICE))
-                {
-                    device->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_SPELLCLICK);
-                    device->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
-                }
-            }
-            else if(seatId == SEAT_TURRET)
-            {
-                if(apply)
-                    return;
-
-                if(Unit *device = vehicle->GetPassenger(SEAT_DEVICE))
-                {
-                    device->SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_SPELLCLICK);
-                    device->SetUInt32Value(UNIT_FIELD_FLAGS, 0); // unselectable
-                }
-            }
-        }
-    };
-};
-
-class boss_flame_leviathan_defense_turret : public CreatureScript
-{
-public:
-    boss_flame_leviathan_defense_turret() : CreatureScript("boss_flame_leviathan_defense_turret") {}
-
-    CreatureAI* GetAI(Creature* pCreature) const
-    {
-        return new boss_flame_leviathan_defense_turretAI(pCreature);
-    }
-
-    struct boss_flame_leviathan_defense_turretAI : public TurretAI
-    {
-        boss_flame_leviathan_defense_turretAI(Creature *c) : TurretAI(c) {}
-
-        void DamageTaken(Unit *who, uint32 &damage)
-        {
-            if(!CanAIAttack(who))
-                damage = 0;
+            else
+                NapalmTimer-=diff;
         }
 
         bool CanAIAttack(const Unit *who) const
@@ -456,46 +702,80 @@
     };
 };
 
+class boss_flame_leviathan_defense_turret : public CreatureScript
+{
+public:
+    boss_flame_leviathan_defense_turret() : CreatureScript("boss_flame_leviathan_defense_turret") { }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new boss_flame_leviathan_defense_turretAI (pCreature);
+    }
+
+    struct boss_flame_leviathan_defense_turretAI : public TurretAI
+    {
+        boss_flame_leviathan_defense_turretAI(Creature *c) : TurretAI(c) {}
+
+        void DamageTaken(Unit* who, uint32 &damage)
+        {
+            if (!CanAIAttack(who))
+                damage = 0;
+        }
+
+        bool CanAIAttack(const Unit *who) const
+        {
+            if (who->GetTypeId() != TYPEID_PLAYER || !who->GetVehicle() || who->GetVehicleBase()->GetEntry() != 33114)
+                return false;
+            return true;
+        }
+    };
+
+};
+
 class boss_flame_leviathan_overload_device : public CreatureScript
 {
 public:
-    boss_flame_leviathan_overload_device() : CreatureScript("boss_flame_leviathan_overload_device") {}
+    boss_flame_leviathan_overload_device() : CreatureScript("boss_flame_leviathan_overload_device") { }
 
     CreatureAI* GetAI(Creature* pCreature) const
     {
-        return new boss_flame_leviathan_overload_deviceAI(pCreature);
+        return new boss_flame_leviathan_overload_deviceAI (pCreature);
     }
 
     struct boss_flame_leviathan_overload_deviceAI : public PassiveAI
     {
-        boss_flame_leviathan_overload_deviceAI(Creature *c) : PassiveAI(c) {}
+        boss_flame_leviathan_overload_deviceAI(Creature* pCreature) : PassiveAI(pCreature)
+        {
+            instance = pCreature->GetInstanceScript();
+        }
+
+        InstanceScript *instance;
 
         void DoAction(const int32 param)
         {
-            if(param == EVENT_SPELLCLICK)
+            if (param == EVENT_SPELLCLICK)
             {
-                me->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_SPELLCLICK);
-                me->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
-                if(me->GetVehicle())
+                if (me->GetVehicle())
                 {
-                    if(Unit *player = me->GetVehicle()->GetPassenger(SEAT_PLAYER))
+                    me->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_SPELLCLICK);
+                    me->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+                    if (Unit* pPlayer = me->GetVehicle()->GetPassenger(SEAT_PLAYER))
                     {
-                        me->GetVehicleBase()->CastSpell(player, SPELL_SMOKE_TRAIL, true);
-                        player->ExitVehicle();
-                        if(Unit *leviathan = me->GetVehicleBase()->GetVehicleBase())
-                            player->GetMotionMaster()->MoveKnockbackFrom(leviathan->GetPositionX(), leviathan->GetPositionY(), 30, 30);
+                        me->GetVehicleBase()->CastSpell(pPlayer, SPELL_SMOKE_TRAIL, true);
+                        pPlayer->GetMotionMaster()->MoveKnockbackFrom(me->GetVehicleBase()->GetPositionX(), me->GetVehicleBase()->GetPositionY(), 30, 30);
+                        pPlayer->ExitVehicle();
                     }
                 }
             }
         }
     };
+
 };
 
 class boss_flame_leviathan_safety_container : public CreatureScript
 {
 public:
-    boss_flame_leviathan_safety_container() : CreatureScript("boss_flame_leviathan_safety_container") {}
-
+    boss_flame_leviathan_safety_container() : CreatureScript("boss_flame_leviathan_safety_container") { }
 
     CreatureAI* GetAI(Creature* pCreature) const
     {
@@ -504,205 +784,585 @@
 
     struct boss_flame_leviathan_safety_containerAI : public PassiveAI
     {
-        boss_flame_leviathan_safety_containerAI(Creature *c) : PassiveAI(c) {}
+        boss_flame_leviathan_safety_containerAI(Creature* pCreature) : PassiveAI(pCreature)
+        {
+        }
 
-        void MovementInform(uint32 type, uint32 id)
+        void JustDied()
         {
-            if(id == me->GetEntry())
+            float x,y,z;
+            me->GetPosition(x,y,z);
+            z = me->GetMap()->GetHeight(x, y, z);
+            me->GetMotionMaster()->MovePoint(0,x,y,z);
+            me->GetMap()->CreatureRelocation(me, x,y,z,0);
+        }
+
+        void UpdateAI(const uint32 /*diff*/)
+        {
+        }
+    };
+};
+
+class npc_mechanolift : public CreatureScript
+{
+public:
+    npc_mechanolift() : CreatureScript("npc_mechanolift") { }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new npc_mechanoliftAI(pCreature);
+    }
+
+    struct npc_mechanoliftAI : public PassiveAI
+    {
+        npc_mechanoliftAI(Creature* pCreature) : PassiveAI(pCreature), vehicle(pCreature->GetVehicleKit())
+        {
+            assert(vehicle);
+        }
+
+        Vehicle* vehicle;
+
+        uint32 MoveTimer;
+
+        void Reset ()
+        {
+            MoveTimer = 0;
+            me->GetMotionMaster()->MoveRandom(50);
+        }
+
+        void JustDied(Unit* pKiller)
+        {
+            me->GetMotionMaster()->MoveTargetedHome();
+            Creature* pLiquid = DoSummon(MOB_LIQUID, me, 0);
+            if (pLiquid)
             {
-                if(Creature *liquid = DoSummon(MOB_LIQUID, me, 0))
-                    liquid->CastSpell(liquid, 62494, true);
-                me->DisappearAndDie(); // this will relocate creature to sky
+                pLiquid->CastSpell(pLiquid, SPELL_LIQUID_PYRITE, true);
+                pLiquid->GetMotionMaster()->MoveFall(pKiller->GetPositionZ());
+            }
+
+        }
+
+        void MovementInform(uint32 /*type*/, uint32 id)
+        {
+            if (id == 1)
+            {
+                Creature* pContainer = me->FindNearestCreature(MOB_CONTAINER, 5, true);
+                if (pContainer)
+                    pContainer->EnterVehicle(me);
             }
         }
 
         void UpdateAI(const uint32 diff)
         {
-            if(!me->GetVehicle() && me->isSummon() && me->GetMotionMaster()->GetCurrentMovementGeneratorType() != POINT_MOTION_TYPE)
-                me->GetMotionMaster()->MoveFall(409.8f, me->GetEntry());
+            if (MoveTimer <= diff)
+            {
+                if (me->GetVehicleKit()->HasEmptySeat(-1))
+                {
+                    Creature* pContainer = me->FindNearestCreature(MOB_CONTAINER, 50, true);
+                    if (pContainer && !pContainer->GetVehicle())
+                        me->GetMotionMaster()->MovePoint(1,pContainer->GetPositionX(),pContainer->GetPositionY(),pContainer->GetPositionZ());
+                }
+                MoveTimer = 30000; //check next 30 seconds
+            }
+            else
+                MoveTimer-=diff;
         }
     };
+
 };
 
+
 class spell_pool_of_tar : public CreatureScript
 {
 public:
-    spell_pool_of_tar() : CreatureScript("spell_pool_of_tar") {}
+    spell_pool_of_tar() : CreatureScript("spell_pool_of_tar") { }
 
     CreatureAI* GetAI(Creature* pCreature) const
     {
-        return new spell_pool_of_tarAI(pCreature);
+        return new spell_pool_of_tarAI (pCreature);
     }
 
-    struct spell_pool_of_tarAI : public TriggerAI
+    struct spell_pool_of_tarAI : public PassiveAI
     {
-        spell_pool_of_tarAI(Creature *c) : TriggerAI(c)
+        spell_pool_of_tarAI(Creature* pCreature) : PassiveAI(pCreature)
         {
             me->RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
         }
 
-        void DamageTaken(Unit *who, uint32 &damage)
+        void DamageTaken(Unit * /*who*/, uint32 &damage)
         {
             damage = 0;
         }
 
-        void SpellHit(Unit* caster, const SpellEntry *spell)
+        void SpellHit(Unit* /*caster*/, const SpellEntry* pSpell)
         {
-            if(spell->SchoolMask & SPELL_SCHOOL_MASK_FIRE && !me->HasAura(SPELL_BLAZE))
+            if (pSpell->SchoolMask & SPELL_SCHOOL_MASK_FIRE && !me->HasAura(SPELL_BLAZE))
                 me->CastSpell(me, SPELL_BLAZE, true);
         }
     };
+
 };
-class keeper_norgannon : public CreatureScript
+
+class npc_colossus : public CreatureScript
 {
 public:
-    keeper_norgannon() : CreatureScript("keeper_norgannon") {}
+    npc_colossus() : CreatureScript("npc_colossus") { }
 
     CreatureAI* GetAI(Creature* pCreature) const
     {
-        return new keeper_norgannonAI(pCreature);
-    }
-
-    struct keeper_norgannonAI : public ScriptedAI
-    {
-        keeper_norgannonAI(Creature *c) : ScriptedAI(c), summons(me)
-        {
-            pInstance = c->GetInstanceScript();
-        }
-
-        InstanceScript* pInstance;
-        SummonList summons;
-
-        void JustSummoned(Creature *summon)
-        {
-            summons.Summon(summon);
-        }
-        /*
-        void DoAction(const int32 action)
-        {
-            if (pInstance)
-            {
-                if (pInstance->GetData(TYPE_COLOSSUS == 2))
-                    pInstance->SetBossState(DATA_PRELEVIATHAN, DONE); // Unlocks the Teleport 2nd Location
-                    DoSummon(VEHICLE_SIEGE, PosSiege[i], 3000, TEMPSUMMON_CORPSE_TIMED_DESPAWN);
-                for(uint32 i = 0; i < (RAID_MODE(2, 5)); ++i)
-                    DoSummon(VEHICLE_CHOPPER, PosChopper[i], 3000, TEMPSUMMON_CORPSE_TIMED_DESPAWN);
-                for(uint32 i = 0; i < (RAID_MODE(2, 5)); ++i)
-                    DoSummon(VEHICLE_DEMOLISHER, PosDemolisher[i], 3000, TEMPSUMMON_CORPSE_TIMED_DESPAWN);
-                }
-        }
-        */
-    };
-
-    bool GossipHello_keeper_norgannon(Player* pPlayer, Creature* pCreature)
-    {
-        InstanceScript *pInstance = pCreature->GetInstanceScript();
-        
-        if (pInstance && pPlayer)
-            if (pInstance->GetBossState(BOSS_LEVIATHAN) != DONE)
-                if (pInstance->GetBossState(BOSS_LEVIATHAN) != SPECIAL)
-                {
-                    pPlayer->PrepareQuestMenu(pCreature->GetGUID());
-                    pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT,GOSSIP_ITEM_1,GOSSIP_SENDER_MAIN,GOSSIP_ACTION_INFO_DEF);
-                    pPlayer->SEND_GOSSIP_MENU(13910, pCreature->GetGUID());
-                }
-        else pPlayer->SEND_GOSSIP_MENU(1, pCreature->GetGUID());
-
-        return true;
-    }
-
-    bool GossipSelect_keeper_norgannon(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
-    {
-        InstanceScript* pInstance = pCreature->GetInstanceScript();
-        switch(uiAction)
-        {
-            case GOSSIP_ACTION_INFO_DEF:
-                if (pPlayer)
-                    pPlayer->CLOSE_GOSSIP_MENU();
-                if (Creature* Norgannon = Unit::GetCreature(*pCreature, pInstance ? pInstance->GetData64(DATA_NORGANNON) : 0))
-                    if (Norgannon->isAlive())
-                    {
-                        Norgannon->AI()->DoAction(ACTION_VEHICLE_RESPAWN);
-                        pInstance->SetBossState(BOSS_LEVIATHAN, SPECIAL);
-                    }
-                break;
-        }
-        return true;
-    }
-};
-class npc_colossus : public CreatureScript
-{
-public:
-    npc_colossus() : CreatureScript("mob_colossus") {}
-
-    CreatureAI* GetAI(Creature* pCreature) const
-    {
-        return new npc_colossusAI(pCreature);
+        return new  npc_colossusAI(pCreature);
     }
 
     struct npc_colossusAI : public ScriptedAI
     {
         npc_colossusAI(Creature* pCreature) : ScriptedAI(pCreature)
         {
-            m_pInstance = me->GetInstanceScript();
+            instance = pCreature->GetInstanceScript();
         }
 
-        InstanceScript* m_pInstance;
-        uint32 uiGroundSlamTimer;
+        InstanceScript *instance;
+
+        void JustDied(Unit* /*Who*/)
+        {
+            if (me->GetHomePosition().IsInDist(Center,50.f))
+                instance->SetData(TYPE_COLOSSUS,instance->GetData(TYPE_COLOSSUS)+1);
+        }
+
+        void UpdateAI(const uint32 /*diff*/)
+        {
+            if (!UpdateVictim())
+                return;
+            DoMeleeAttackIfReady() ;
+        }
+    };
+
+};
+
+class npc_thorims_hammer : public CreatureScript
+{
+public:
+    npc_thorims_hammer() : CreatureScript("npc_thorims_hammer") { }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new  npc_thorims_hammerAI(pCreature);
+    }
+
+    struct npc_thorims_hammerAI : public ScriptedAI
+    {
+        npc_thorims_hammerAI(Creature* pCreature) : ScriptedAI (pCreature)
+        {
+            me->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+            me->AddAura(AURA_DUMMY_BLUE, me);
+        }
+
+        void MoveInLineOfSight(Unit* who)
+        {
+            if (who->GetTypeId() == TYPEID_PLAYER && who->IsVehicle() && me->IsInRange(who,0,10,false))
+            {
+                if (Creature* pTrigger = DoSummonFlyer(NPC_THORIM_TARGET_BEACON, me, 20, 0, 1000, TEMPSUMMON_TIMED_DESPAWN))
+                    pTrigger->CastSpell(who, SPELL_THORIM_S_HAMMER, true);
+            }
+        }
+
+        void Reset ()
+        {
+        }
+
+        void UpdateAI(const uint32 /*diff*/)
+        {
+            if (!me->HasAura(AURA_DUMMY_BLUE))
+                me->AddAura(AURA_DUMMY_BLUE, me);
+
+            if (!UpdateVictim())
+                return;
+        }
+    };
+
+};
+
+class npc_mimirons_inferno : public CreatureScript
+{
+public:
+    npc_mimirons_inferno() : CreatureScript("npc_mimirons_inferno") { }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new  npc_mimirons_infernoAI(pCreature);
+    }
+
+    struct npc_mimirons_infernoAI : public npc_escortAI
+    {
+        npc_mimirons_infernoAI(Creature* pCreature) : npc_escortAI(pCreature)
+        {
+            me->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NON_ATTACKABLE | UNIT_FLAG_NOT_SELECTABLE);
+            me->AddAura(AURA_DUMMY_YELLOW, me);
+            me->SetReactState(REACT_PASSIVE);
+        }
+
+        void WaypointReached(uint32 /*i*/)
+        {
+        }
 
         void Reset()
         {
-            uiGroundSlamTimer = 12000;
+            infernoTimer = 2000;
         }
 
-        void JustDied(Unit *victim)
+        uint32 infernoTimer;
+
+        void UpdateAI(const uint32 diff)
         {
-            if (me->isSummon())
+            npc_escortAI::UpdateAI(diff);
+
+            if (!HasEscortState(STATE_ESCORT_ESCORTING))
             {
-                if (Creature* pLeviathan = Unit::GetCreature(*me, m_pInstance->GetData64(DATA_LEVIATHAN)))
-                    if (pLeviathan->AI())
-                        pLeviathan->AI()->DoAction(INCREASE_COLOSSUS_COUNT);
+                Start(false,true,0,NULL,false,true);
+            }
+            else
+            {
+                if(infernoTimer <= diff)
+                {
+                    if (Creature* pTrigger = DoSummonFlyer(NPC_MIMIRON_TARGET_BEACON, me, 20, 0, 1000, TEMPSUMMON_TIMED_DESPAWN))
+                    {
+                        pTrigger->CastSpell(me->GetPositionX(),me->GetPositionY(),me->GetPositionZ(), SPELL_MIMIRON_S_INFERNO, true);
+                        infernoTimer = 2000;
+                    }
+                }
+                else
+                    infernoTimer -= diff;
+
+                if (!me->HasAura(AURA_DUMMY_YELLOW))
+                    me->AddAura(AURA_DUMMY_YELLOW, me);
             }
         }
-        
+    };
+
+};
+
+
+class npc_hodirs_fury : public CreatureScript
+{
+public:
+    npc_hodirs_fury() : CreatureScript("npc_hodirs_fury") { }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new  npc_hodirs_furyAI(pCreature);
+    }
+
+    struct npc_hodirs_furyAI : public ScriptedAI
+    {
+        npc_hodirs_furyAI(Creature* pCreature) : ScriptedAI (pCreature)
+        {
+            me->SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);
+            me->AddAura(AURA_DUMMY_GREEN, me);
+        }
+
+        void MoveInLineOfSight(Unit* who)
+        {
+            if (who->GetTypeId() == TYPEID_PLAYER && who->IsVehicle() && me->IsInRange(who,0,5,false))
+            {
+                if (Creature* pTrigger = DoSummonFlyer(NPC_HODIR_TARGET_BEACON, me, 20, 0, 1000, TEMPSUMMON_TIMED_DESPAWN))
+                    pTrigger->CastSpell(who, SPELL_HODIR_S_FURY, true);
+            }
+        }
+
+        void Reset()
+        {
+        }
+
+        void UpdateAI(const uint32 /*diff*/)
+        {
+            if (!me->HasAura(AURA_DUMMY_GREEN))
+                me->AddAura(AURA_DUMMY_GREEN, me);
+
+            if (!UpdateVictim())
+                return;
+        }
+    };
+
+};
+
+class npc_freyas_ward : public CreatureScript
+{
+public:
+    npc_freyas_ward() : CreatureScript("npc_freyas_ward") { }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new  npc_freyas_wardAI(pCreature);
+    }
+
+    struct npc_freyas_wardAI : public ScriptedAI
+    {
+        npc_freyas_wardAI(Creature* pCreature) : ScriptedAI(pCreature)
+        {
+            me->AddAura(AURA_DUMMY_GREEN, me);
+        }
+
+        uint32 summonTimer ;
+
+        void Reset()
+        {
+            summonTimer = 5000 ;
+        }
+
+        void UpdateAI(const uint32 diff)
+        {
+            if(summonTimer <= diff)
+            {
+                DoCast(SPELL_FREYA_S_WARD_EFFECT_1) ;
+                DoCast(SPELL_FREYA_S_WARD_EFFECT_2) ;
+                summonTimer = 20000 ;
+            }
+            else
+                summonTimer -= diff ;
+
+            if (!me->HasAura(AURA_DUMMY_GREEN))
+                me->AddAura(AURA_DUMMY_GREEN, me);
+
+            if (!UpdateVictim())
+                return;
+        }
+    };
+
+};
+
+class npc_freya_ward_summon : public CreatureScript
+{
+public:
+    npc_freya_ward_summon() : CreatureScript("npc_freya_ward_summon") { }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new npc_freya_ward_summonAI (pCreature);
+    }
+
+    struct npc_freya_ward_summonAI : public ScriptedAI
+    {
+        npc_freya_ward_summonAI(Creature* pCreature) : ScriptedAI(pCreature)
+        {
+            pCreature->GetMotionMaster()->MoveRandom(100);
+        }
+
+        uint32 lashTimer ;
+
+        void Reset()
+        {
+            lashTimer = 5000 ;
+        }
+
         void UpdateAI(const uint32 diff)
         {
             if (!UpdateVictim())
                 return;
 
-            if (uiGroundSlamTimer <= diff)
+            if(lashTimer <= diff)
             {
-                DoCast(me->getVictim(), SPELL_GROUND_SLAM);
-                uiGroundSlamTimer = 12000;
+                DoCast(SPELL_LASH);
+                lashTimer = 20000;
             }
-            else uiGroundSlamTimer -= diff;
+            else
+                lashTimer -= diff;
 
             DoMeleeAttackIfReady();
         }
     };
+
 };
 
-class AT_RX_214_repair_o_matic_station : public AreaTriggerScript
+//npc lore keeper
+#define GOSSIP_ITEM_1  "Activate secondary defensive systems"
+#define GOSSIP_ITEM_2  "Confirmed"
+class npc_lorekeeper : public CreatureScript
+{
+public:
+    npc_lorekeeper() : CreatureScript("npc_lorekeeper") { }
+
+    bool OnGossipSelect(Player* pPlayer, Creature* pCreature, uint32 /*uiSender*/, uint32 uiAction)
+    {
+        pPlayer->PlayerTalkClass->ClearMenus();
+        InstanceScript* instance = pCreature->GetInstanceScript();
+        switch(uiAction)
+        {
+        case GOSSIP_ACTION_INFO_DEF+1:
+            if (pPlayer)
+            {
+                pPlayer->PrepareGossipMenu(pCreature);
+                instance->instance->LoadGrid(364,-16); //make sure leviathan is loaded
+
+
+                pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT,GOSSIP_ITEM_2,GOSSIP_SENDER_MAIN,GOSSIP_ACTION_INFO_DEF+2);
+                pPlayer->SEND_GOSSIP_MENU(pPlayer->GetGossipTextId(pCreature), pCreature->GetGUID());
+            }
+            break;
+        case GOSSIP_ACTION_INFO_DEF+2:
+            if (pPlayer)
+                pPlayer->CLOSE_GOSSIP_MENU();
+
+            if (Creature* pLeviathan = instance->instance->GetCreature(instance->GetData64(TYPE_LEVIATHAN)))
+            {
+                CAST_AI(boss_flame_leviathan::boss_flame_leviathanAI, (pLeviathan->AI()))->DoAction(0); //enable hard mode activating the 4 additional events spawning additional vehicles
+                pCreature->SetVisibility(VISIBILITY_OFF);
+                pCreature->AI()->DoAction(0); // spawn the vehicles
+                if (Creature* Delorah = pCreature->FindNearestCreature(NPC_DELORAH, 1000, true))
+                {
+                    if (Creature* Branz = pCreature->FindNearestCreature(NPC_BRANZ_BRONZBEARD, 1000, true))
+                    {
+                        Delorah->GetMotionMaster()->MovePoint(0, Branz->GetPositionX()-4, Branz->GetPositionY(), Branz->GetPositionZ());
+                        //TODO DoScriptText(xxxx, Delorah, Branz); when reached at branz
+                    }
+                }
+            }
+            break;
+        }
+        return true;
+    }
+
+    bool OnGossipHello(Player* pPlayer, Creature* pCreature)
+    {
+        InstanceScript* instance = pCreature->GetInstanceScript();
+        if (instance && instance->GetData(TYPE_LEVIATHAN) !=DONE && pPlayer)
+        {
+            pPlayer->PrepareGossipMenu(pCreature);
+
+            pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT,GOSSIP_ITEM_1,GOSSIP_SENDER_MAIN,GOSSIP_ACTION_INFO_DEF+1);
+            pPlayer->SEND_GOSSIP_MENU(pPlayer->GetGossipTextId(pCreature), pCreature->GetGUID());
+        }
+        return true;
+    }
+
+    CreatureAI* GetAI(Creature* pCreature) const
+    {
+        return new npc_lorekeeperAI (pCreature);
+    }
+
+    struct npc_lorekeeperAI : public ScriptedAI
+    {
+        npc_lorekeeperAI(Creature* pCreature) : ScriptedAI(pCreature)
+        {
+            instance = pCreature->GetInstanceScript();
+        }
+
+        InstanceScript* instance;
+
+        void DoAction(const int32 uiAction)
+        {
+            // Start encounter
+            if (uiAction == 0)
+            {
+                for (int32 i = 0; i < RAID_MODE(2, 5); ++i)
+                    DoSummon(VEHICLE_SIEGE, PosSiege[i], 3000, TEMPSUMMON_CORPSE_TIMED_DESPAWN);
+                for (int32 i = 0; i < RAID_MODE(2, 5); ++i)
+                    DoSummon(VEHICLE_CHOPPER, PosChopper[i], 3000, TEMPSUMMON_CORPSE_TIMED_DESPAWN);
+                for (int32 i = 0; i < RAID_MODE(2, 5); ++i)
+                    DoSummon(VEHICLE_DEMOLISHER, PosDemolisher[i], 3000, TEMPSUMMON_CORPSE_TIMED_DESPAWN);
+                return;
+            }
+        }
+    };
+
+};
+
+//enable hardmode
+////npc_brann_bronzebeard this requires more work involving area triggers. if reached this guy speaks through his radio..
+//#define GOSSIP_ITEM_1  "xxxxx"
+//#define GOSSIP_ITEM_2  "xxxxx"
+//
+/*
+class npc_brann_bronzebeard : public CreatureScript
+{
+public:
+    npc_brann_bronzebeard() : CreatureScript("npc_brann_bronzebeard") { }
+
+    //bool OnGossipSelect(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+    //{
+    //    switch(uiAction)
+    //    {
+    //        case GOSSIP_ACTION_INFO_DEF+1:
+    //            if (pPlayer)
+    //            {
+    //                pPlayer->PrepareGossipMenu(pCreature);
+    //
+    //                pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT,GOSSIP_ITEM_2,GOSSIP_SENDER_MAIN,GOSSIP_ACTION_INFO_DEF+2);
+    //                pPlayer->SEND_GOSSIP_MENU(pPlayer->GetGossipTextId(pCreature), pCreature->GetGUID());
+    //            }
+    //            break;
+    //        case GOSSIP_ACTION_INFO_DEF+2:
+    //            if (pPlayer)
+    //                pPlayer->CLOSE_GOSSIP_MENU();
+    //            if (Creature* Lorekeeper = pCreature->FindNearestCreature(NPC_LOREKEEPER, 1000, true)) //lore keeper of lorgannon
+    //                Lorekeeper->RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_GOSSIP);
+    //            break;
+    //    }
+    //    return true;
+    //}
+    //bool OnGossipHello(Player* pPlayer, Creature* pCreature)
+    //{
+    //    InstanceScript* instance = pCreature->GetInstanceScript();
+    //    if (instance && instance->GetData(TYPE_LEVIATHAN) !=DONE)
+    //    {
+    //        pPlayer->PrepareGossipMenu(pCreature);
+    //
+    //        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT,GOSSIP_ITEM_1,GOSSIP_SENDER_MAIN,GOSSIP_ACTION_INFO_DEF+1);
+    //        pPlayer->SEND_GOSSIP_MENU(pPlayer->GetGossipTextId(pCreature), pCreature->GetGUID());
+    //    }
+    //    return true;
+    //}
+    //
+}
+*/
+
+class go_ulduar_tower : public GameObjectScript
+{
+public:
+    go_ulduar_tower() : GameObjectScript("go_ulduar_tower") { }
+
+    void OnDestroyed(Player* /*pPlayer*/, GameObject* pGO, uint32 /*value*/)
+    {
+        InstanceScript* instance = pGO->GetInstanceScript();
+        if (pGO->GetGOValue()->building.health == 0)
+        {
+            switch(pGO->GetEntry())
+            {
+            case GO_TOWER_OF_STORMS:
+                instance->ProcessEvent(pGO, EVENT_TOWER_OF_STORM_DESTROYED);
+                break;
+            case GO_TOWER_OF_FLAMES:
+                instance->ProcessEvent(pGO, EVENT_TOWER_OF_FLAMES_DESTROYED);
+                break;
+            case GO_TOWER_OF_FROST:
+                instance->ProcessEvent(pGO, EVENT_TOWER_OF_FROST_DESTROYED);
+                break;
+            case GO_TOWER_OF_LIFE:
+                instance->ProcessEvent(pGO, EVENT_TOWER_OF_LIFE_DESTROYED);
+                break;
+            }
+        }
+    }
+
+};
+
+class at_RX_214_repair_o_matic_station : public AreaTriggerScript
 {
 public:
     at_RX_214_repair_o_matic_station() : AreaTriggerScript("at_RX_214_repair_o_matic_station") { }
 
     bool OnTrigger(Player* pPlayer, const AreaTriggerEntry* /*pAt*/)
     {
-         
-        if(Creature* vehicle = pPlayer->GetVehicleCreatureBase())
-        {
-            if(!vehicle->HasAura(SPELL_AUTO_REPAIR))
-            {
-                pPlayer->MonsterTextEmote(EMOTE_REPAIR, pPlayer->GetGUID(), true);
-                pPlayer->CastSpell(vehicle, SPELL_AUTO_REPAIR, true);
-            }
-        }
-        return true;
-    }
+        if(Creature* vehicle = pPlayer->GetVehicleCreatureBase())
+        {
+            if(!vehicle->HasAura(SPELL_AUTO_REPAIR))
+            {
+                pPlayer->MonsterTextEmote(EMOTE_REPAIR, pPlayer->GetGUID(), true);
+                pPlayer->CastSpell(vehicle, SPELL_AUTO_REPAIR, true);
+            }
+        }
+        return true;
+    }
 
-
-       
+};
 
 void AddSC_boss_flame_leviathan()
 {
@@ -711,8 +1371,16 @@
     new boss_flame_leviathan_defense_turret();
     new boss_flame_leviathan_overload_device();
     new boss_flame_leviathan_safety_container();
+    new npc_mechanolift();
     new spell_pool_of_tar();
-    new keeper_norgannon();
     new npc_colossus();
-    new AT_RX_214_repair_o_matic_station();
-};
\ No newline at end of file
+    new npc_thorims_hammer();
+    new npc_mimirons_inferno();
+    new npc_hodirs_fury();
+    new npc_freyas_ward();
+    new npc_freya_ward_summon();
+    new npc_lorekeeper();
+    // new npc_brann_bronzebeard();
+    new go_ulduar_tower();
+    new at_RX_214_repair_o_matic_station();
+}
diff --git a/src/server/scripts/World/npc_customize.cpp b/src/server/scripts/World/npc_customize.cpp
--- a/src/server/scripts/World/npc_customize.cpp
+++ b/src/server/scripts/World/npc_customize.cpp
@@ -14,9 +14,7 @@
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
 
-/* SQL
-REPLACE INTO `creature_template` (`entry`, `difficulty_entry_1`, `difficulty_entry_2`, `difficulty_entry_3`, `KillCredit1`, `KillCredit2`, `modelid1`, `modelid2`, `modelid3`, `modelid4`, `name`, `subname`, `IconName`, `gossip_menu_id`, `minlevel`, `maxlevel`, `exp`, `faction_A`, `faction_H`, `npcflag`, `scale`, `rank`, `mindmg`, `maxdmg`, `dmgschool`, `attackpower`, `dmg_multiplier`, `baseattacktime`, `rangeattacktime`, `unit_class`, `unit_flags`, `dynamicflags`, `family`, `trainer_type`, `trainer_spell`, `trainer_class`, `trainer_race`, `minrangedmg`, `maxrangedmg`, `rangedattackpower`, `type`, `type_flags`, `lootid`, `pickpocketloot`, `skinloot`, `resistance1`, `resistance2`, `resistance3`, `resistance4`, `resistance5`, `resistance6`, `spell1`, `spell2`, `spell3`, `spell4`, `spell5`, `spell6`, `spell7`, `spell8`, `PetSpellDataId`, `VehicleId`, `mingold`, `maxgold`, `AIName`, `MovementType`, `InhabitType`, `Health_mod`, `Mana_mod`, `RacialLeader`, `questItem1`, `questItem2`, `questItem3`, `questItem4`, `questItem5`, `questItem6`, `movementId`, `RegenHealth`, `equipment_id`, `mechanic_immune_mask`, `flags_extra`, `ScriptName`) VALUES (100001, 0, 0, 0, 0, 0, 26789, 0, 0, 0, 'Herurg', 'Customize Service', '', 0, 80, 80, 0, 35, 35, 1, 0.75, 2, 1755, 1755, 0, 1504, 1000, 1500, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '', 0, 3, 100, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 'npc_customize');
-*/
+
 
 #include "ScriptPCH.h"
 
diff --git a/src/server/scripts/World/npc_mount.cpp b/src/server/scripts/World/npc_mount.cpp
--- a/src/server/scripts/World/npc_mount.cpp
+++ b/src/server/scripts/World/npc_mount.cpp
@@ -14,66 +14,63 @@
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
 
-#include "ScriptPCH.h"
-
-#define MSG_GOSSIP_TEXT_1               "РЇ Р±С‹ С…РѕС‚РµР» РІР·СЏС‚СЊ РЅР° РїСЂРѕРєР°С‚ Р±С‹СЃС‚СЂРѕРµ СЃСЂРµРґСЃС‚РІРѕ РїРµСЂРµРґРІРёР¶РµРЅРёСЏ Р·Р° 1 РјРµРґРЅСѓСЋ РјРѕРЅРµС‚Сѓ"
-#define MSG_GOSSIP_TEXT_2               "РЇ Р±С‹ С…РѕС‚РµР» РІР·СЏС‚СЊ РЅР° РїСЂРѕРєР°С‚ РѕС‡РµРЅСЊ Р±С‹СЃС‚СЂРѕРµ СЃСЂРµРґСЃС‚РІРѕ РїРµСЂРµРґРІРёР¶РµРЅРёСЏ Р·Р° 1 Р·РѕР»РѕС‚СѓСЋ РјРѕРЅРµС‚Сѓ"
-#define MSG_NOT_MONEY					"РЈ РІР°СЃ РЅРµ РґРѕСЃС‚Р°С‚РѕС‡РЅРѕ РґРµРЅРµРі..."
-#define MSG_MOUTED						"Р’С‹ СѓР¶Рµ РЅР° СЃСЂРµРґСЃС‚РІРµ РїРµСЂРµРґРІРёР¶РµРЅРёСЏ."
-#define COST_MONEY_1					100
-#define COST_MONEY_2					1000
-#define MOUNT_SPELL_ID_1				43899
-#define MOUNT_SPELL_ID_2				43900
-
-bool GossipHello_npc_mount(Player *player, Creature *_creature)
-{
-    player->ADD_GOSSIP_ITEM(0, MSG_GOSSIP_TEXT_1, GOSSIP_SENDER_MAIN, 1001);
-	player->ADD_GOSSIP_ITEM(0, MSG_GOSSIP_TEXT_2, GOSSIP_SENDER_MAIN, 1002);
-    player->SEND_GOSSIP_MENU(DEFAULT_GOSSIP_MESSAGE, _creature->GetGUID());
-    return true;
-}
-
-bool GossipSelect_npc_mount(Player *player, Creature *_creature, uint32 sender, uint32 action )
-{
-    if (sender != GOSSIP_SENDER_MAIN)
-        return false;
-
-	if (player->IsMounted()){
-		_creature->MonsterWhisper(MSG_MOUTED, player->GetGUID());
-		return false;
-	}
-
-	switch (action)
-	{
-		case 1001:
-			if (player->GetMoney() < COST_MONEY_1)
-			{
-				_creature->MonsterWhisper(MSG_NOT_MONEY, player->GetGUID());
-			}else{
-				player->AddAura(MOUNT_SPELL_ID_1,	player);
-				player->ModifyMoney(-COST_MONEY_1);
-			}
-			break;
-		case 1002:
-			if (player->GetMoney() < COST_MONEY_2)
-			{
-				_creature->MonsterWhisper(MSG_NOT_MONEY, player->GetGUID());
-			}else{
-				player->AddAura(MOUNT_SPELL_ID_2,	player);
-				player->ModifyMoney(-COST_MONEY_2);
-			}
-			break;
-	}
-    return true;
-}
-
-
-void AddSC_npc_mount()
-{
-    Script *newscript;
-    newscript = new Script;
-    newscript->Name = "npc_mount";
-    newscript->pGossipHello = &GossipHello_npc_mount;
-    newscript->pGossipSelect = &GossipSelect_npc_mount;
-    newscript->RegisterSelf();
-}
+/* SQL
+REPLACE INTO `creature_template` (`entry`, `difficulty_entry_1`, `difficulty_entry_2`, `difficulty_entry_3`, `KillCredit1`, `KillCredit2`, `modelid1`, `modelid2`, `modelid3`, `modelid4`, `name`, `subname`, `IconName`, `gossip_menu_id`, `minlevel`, `maxlevel`, `exp`, `faction_A`, `faction_H`, `npcflag`, `scale`, `rank`, `mindmg`, `maxdmg`, `dmgschool`, `attackpower`, `dmg_multiplier`, `baseattacktime`, `rangeattacktime`, `unit_class`, `unit_flags`, `dynamicflags`, `family`, `trainer_type`, `trainer_spell`, `trainer_class`, `trainer_race`, `minrangedmg`, `maxrangedmg`, `rangedattackpower`, `type`, `type_flags`, `lootid`, `pickpocketloot`, `skinloot`, `resistance1`, `resistance2`, `resistance3`, `resistance4`, `resistance5`, `resistance6`, `spell1`, `spell2`, `spell3`, `spell4`, `spell5`, `spell6`, `spell7`, `spell8`, `PetSpellDataId`, `VehicleId`, `mingold`, `maxgold`, `AIName`, `MovementType`, `InhabitType`, `Health_mod`, `Mana_mod`, `RacialLeader`, `questItem1`, `questItem2`, `questItem3`, `questItem4`, `questItem5`, `questItem6`, `movementId`, `RegenHealth`, `equipment_id`, `mechanic_immune_mask`, `flags_extra`, `ScriptName`) VALUES (100002, 0, 0, 0, 0, 0, 27153, 0, 0, 0, 'Mounts', 'Transport Service', '', 0, 80, 80, 0, 35, 35, 1, 0.75, 2, 1755, 1755, 0, 1504, 1000, 1500, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, '', 0, 3, 100, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 'npc_mount');
+*/
+
+#include "ScriptPCH.h"
+
+#define MSG_GOSSIP_TEXT_MOUNT           "РџСЂРѕРєР°С‚ РµР·РґРѕРІС‹С… Р¶РёРІРѕС‚РЅС‹С…"
+#define MSG_HI_LEVEL                    "РЈ РІР°СЃ СЃР»РёС€РєРѕРј Р±РѕР»СЊС€РѕР№ СѓСЂРѕРІРµРЅСЊ..."
+#define MSG_MOUTED                      "Р’С‹ СѓР¶Рµ РЅР° СЃСЂРµРґСЃС‚РІРµ РїРµСЂРµРґРІРёР¶РµРЅРёСЏ."
+#define MOUNT_SPELL_MOUNT               64657
+
+
+class npc_mount : public CreatureScript
+{
+    public:
+    npc_mount() : CreatureScript("npc_mount") { }
+    
+    bool OnGossipHello(Player* pPlayer, Creature* pCreature)
+    {
+        pPlayer->ADD_GOSSIP_ITEM(GOSSIP_ICON_CHAT, MSG_GOSSIP_TEXT_MOUNT, GOSSIP_SENDER_MAIN, 1);
+        pPlayer->SEND_GOSSIP_MENU(DEFAULT_GOSSIP_MESSAGE, pCreature->GetGUID());
+        return true;
+    }
+
+    bool OnGossipSelect(Player* pPlayer, Creature* pCreature, uint32 uiSender, uint32 uiAction)
+    {
+	    if (uiSender != GOSSIP_SENDER_MAIN)
+            return false;
+
+        pPlayer->PlayerTalkClass->ClearMenus();
+
+	    switch (uiAction)
+	    {
+		    case 1:
+                if (pPlayer->getLevel()>30)
+                {
+                    pCreature->MonsterWhisper(MSG_HI_LEVEL, pPlayer->GetGUID());
+                    pPlayer->CLOSE_GOSSIP_MENU();
+			        break;
+                }
+                if (pPlayer->IsMounted())
+                {
+                    pCreature->MonsterWhisper(MSG_MOUTED, pPlayer->GetGUID());
+                    pPlayer->CLOSE_GOSSIP_MENU();
+			        break;
+                }
+                pPlayer->AddAura(MOUNT_SPELL_MOUNT, pPlayer);
+			    pPlayer->CLOSE_GOSSIP_MENU();
+			    break;
+		    default: 
+			    pPlayer->CLOSE_GOSSIP_MENU();
+	    }
+        return true;
+    }
+};
+
+void AddSC_npc_mount()
+{
+    new npc_mount;
+}
\ No newline at end of file
